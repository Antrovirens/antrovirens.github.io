<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Atrovirens&#39; Café</title>
  
  <subtitle>来杯下午茶吧</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-12-07T14:15:31.392Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>antrovirens</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Eric6安装和配置</title>
    <link href="http://yoursite.com/2019/12/07/Eric6%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2019/12/07/Eric6安装和配置/</id>
    <published>2019-12-07T11:23:49.000Z</published>
    <updated>2019-12-07T14:15:31.392Z</updated>
    
    <content type="html"><![CDATA[<p>##准备</p><p>官网下载：<a href="http://eric-ide.python-projects.org/eric-download.html" target="_blank" rel="noopener">http://eric-ide.python-projects.org/eric-download.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#环境</span></span><br><span class="line">C:\Program Files\Python37\Scripts&gt;python -m pip install --upgrade pip</span><br><span class="line">C:\Program Files\Python37\Scripts&gt;pip install PyQt5-tools</span><br><span class="line">C:\Program Files\Python37\Scripts&gt;pip install PyQt5==5.13.0</span><br><span class="line">C:\Program Files\Python37\Scripts&gt;pip install QScintilla</span><br></pre></td></tr></table></figure><p>##安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\Python37\Scripts&gt;python C:\\eric6-19.11\\install.py</span><br><span class="line">Checking dependencies</span><br><span class="line">Python Version: 3.7.4</span><br><span class="line">Found PyQt5</span><br><span class="line">Found pyuic5</span><br><span class="line">PyQtWebEngine could not be detected.</span><br><span class="line">Error: cannot import name <span class="string">'QtWebEngineWidgets'</span> from <span class="string">'PyQt5'</span> (C:\Program Files\Python37\lib\site-packages\PyQt5\__init__.py)</span><br><span class="line"></span><br><span class="line">Shall <span class="string">'PyQtWebEngine'</span> be installed using pip? (Y/n) y</span><br><span class="line">Looking <span class="keyword">in</span> indexes: https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">Collecting PyQtWebEngine</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/e0/8e/20771122d37e4274eff3c69fc3216b5ddeeef67064d62a1181c78c9a5d58/PyQtWebEngine-5.13.2-5.13.2-cp35.cp36.cp37.cp38-none-win_amd64.whl (54.5MB)</span><br><span class="line">     |████████████████████████████████| 54.5MB 819kB/s</span><br><span class="line">Requirement already satisfied: PyQt5&gt;=5.13 <span class="keyword">in</span> c:\program files\python37\lib\site-packages (from PyQtWebEngine) (5.13.2)</span><br><span class="line">Requirement already satisfied: PyQt5_sip&lt;13,&gt;=4.19.19 <span class="keyword">in</span> c:\program files\python37\lib\site-packages (from PyQt5&gt;=5.13-&gt;PyQtWebEngine) (12.7.0)</span><br><span class="line">Installing collected packages: PyQtWebEngine</span><br><span class="line">Successfully installed PyQtWebEngine-5.13.2</span><br><span class="line">PyQtChart could not be detected.</span><br><span class="line">Error: cannot import name <span class="string">'QtChart'</span> from <span class="string">'PyQt5'</span> (C:\Program Files\Python37\lib\site-packages\PyQt5\__init__.py)</span><br><span class="line"></span><br><span class="line">Shall <span class="string">'PyQtChart'</span> be installed using pip? (Y/n) y</span><br><span class="line">Looking <span class="keyword">in</span> indexes: https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">Collecting PyQtChart</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/02/ea/d4daca481a8da8dfe8dd194ccd773126704744df9e71b55b19e4b8dc988e/PyQtChart-5.13.1-5.13.2-cp35.cp36.cp37.cp38-none-win_amd64.whl (848kB)</span><br><span class="line">     |████████████████████████████████| 849kB 159kB/s</span><br><span class="line">Requirement already satisfied: PyQt5&gt;=5.13 <span class="keyword">in</span> c:\program files\python37\lib\site-packages (from PyQtChart) (5.13.2)</span><br><span class="line">Requirement already satisfied: PyQt5_sip&lt;13,&gt;=4.19.19 <span class="keyword">in</span> c:\program files\python37\lib\site-packages (from PyQt5&gt;=5.13-&gt;PyQtChart) (12.7.0)</span><br><span class="line">Installing collected packages: PyQtChart</span><br><span class="line">Successfully installed PyQtChart-5.13.1</span><br><span class="line"></span><br><span class="line">Python Version: 3.7.4</span><br><span class="line">Found PyQt5</span><br><span class="line">Found pyuic5</span><br><span class="line">Found QScintilla2</span><br><span class="line">Found QtGui</span><br><span class="line">Found QtNetwork</span><br><span class="line">Found QtPrintSupport</span><br><span class="line">Found QtSql</span><br><span class="line">Found QtSvg</span><br><span class="line">Found QtWidgets</span><br><span class="line">Found QtWebEngineWidgets</span><br><span class="line">Qt Version: 5.13.0</span><br><span class="line">sip Version: 5.0.0</span><br><span class="line">PyQt Version: 5.13.0</span><br><span class="line">QScintilla Version: 2.11.3</span><br><span class="line">All dependencies ok.</span><br><span class="line"></span><br><span class="line">Cleaning up old installation ...</span><br><span class="line"></span><br><span class="line">Creating configuration file ...</span><br><span class="line"></span><br><span class="line">Compiling user interface files ...</span><br><span class="line"></span><br><span class="line">Compiling <span class="built_in">source</span> files ...</span><br><span class="line"></span><br><span class="line">Installing eric6 ...</span><br><span class="line">Installing Python API files to <span class="string">'C:\Program Files\Python37\Lib\site-packages\PyQt5\Qt\qsci\api\python'</span>.</span><br><span class="line">Installing Ruby API files to <span class="string">'C:\Program Files\Python37\Lib\site-packages\PyQt5\Qt\qsci\api\ruby'</span>.</span><br><span class="line">Installing QSS API files to <span class="string">'C:\Program Files\Python37\Lib\site-packages\PyQt5\Qt\qsci\api\qss'</span>.</span><br><span class="line"></span><br><span class="line">The Python package <span class="string">'pywin32'</span> could not be imported.</span><br><span class="line"></span><br><span class="line">Shall <span class="string">'pywin32'</span> be installed using pip? (Y/n) y</span><br><span class="line">Looking <span class="keyword">in</span> indexes: https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">Collecting pywin32</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/bb/23/00fe4fbf9963f3bcb34a443eba0d0283fc51e5887d4045552c87490394e4/pywin32-227-cp37-cp37m-win_amd64.whl (9.1MB)</span><br><span class="line">     |████████████████████████████████| 9.1MB 819kB/s</span><br><span class="line">Installing collected packages: pywin32</span><br><span class="line">Successfully installed pywin32-227</span><br><span class="line"></span><br><span class="line">Installation complete.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Press enter to <span class="built_in">continue</span>...</span><br></pre></td></tr></table></figure><p>##配置<br>大部分和网上的教程一样，比如https://blog.csdn.net/qq_28019591/article/details/84567724</p><p>qt设置中，QT tools的路径设置为C:\Program Files\Python37\Lib\site-packages\pyqt5_tools\Qt\bin，即含有designer.exe的路径</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;##准备&lt;/p&gt;
&lt;p&gt;官网下载：&lt;a href=&quot;http://eric-ide.python-projects.org/eric-download.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://eric-ide.python-p
      
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="软件安装" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
      <category term="桌面开发" scheme="http://yoursite.com/tags/%E6%A1%8C%E9%9D%A2%E5%BC%80%E5%8F%91/"/>
    
      <category term="PyQt" scheme="http://yoursite.com/tags/PyQt/"/>
    
  </entry>
  
  <entry>
    <title>基于深度学习的SAR影像分类</title>
    <link href="http://yoursite.com/2019/11/13/%E5%9F%BA%E4%BA%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84SAR%E5%BD%B1%E5%83%8F%E5%88%86%E7%B1%BB/"/>
    <id>http://yoursite.com/2019/11/13/基于深度学习的SAR影像分类/</id>
    <published>2019-11-13T09:33:46.000Z</published>
    <updated>2019-11-15T16:58:00.035Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2><p>目前应用于高分辨率遥感影像分类的常用算法,其精度已无法满足大数据环境下的分类要求的问题，对于全新方法的探索十分迫切。</p><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/191113/1.png" alt="人工神经网络（ANN）"></div><p>人工神经网络（ANN）是机器学习与人工智能领域的一种模型，ANN分类以其强大的非线性映射能力、自主学习等能力受到人们的欢迎，过往通常的遥感分类方法大多属于浅层结构模型，这些浅层结构模型的共同特点是对于原始的输入信号只经过较少层次或者非线性处理来达到信息处理的目的。但是对于一些有着复杂结构的信息源，浅层结构模型处理信息的局限性就会凸显出来。更深的层次结构意味着中间处理时的通道组合越多，拥有更复杂的多层非线性变换，而具有更强的表达与建模能力，即对于复杂信息结构的适应性更好。高分辨率遥感影像的分类是一个复杂的过程，采用浅层结构模型对其进行分类有很大的局限性，当下的大数据环境下，因为神经网络的对噪声数据的高承受能力，对未经训练的数据的模式分类能力，成为遥感影像分类方法的合理选择。</p><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/191113/2.png" alt="SVM和CNN方法的精度对比"></div><p>卷积神经网络（Convolutional Neural Networks, CNN）是一类是为处理二维形状而特殊设计的，包含卷积计算且具有深度结构的前馈神经网络，是深度学习的代表算法之一，它的网络结构更接近于实际的生物神经网络。卷积神经网络由日本学者在1980年首次提出，时间延迟网络和LeNet-5是最早出现的卷积神经网络；在二十一世纪后，随着深度学习理论的提出和数值计算设备的改进，卷积神经网络得到了快速发展，并被应用于计算机视觉、自然语言处理等领域。它使用了局部感知区域、共享权值和空间或者时间域上的降采样，这种网络结构对平移、比例缩放、倾斜或者共他形式的变形具有高度不变性。</p><h2 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h2><p>在生物界，神经元都会将电信号从一段传递到另一端，沿着突触，将电信号从树突传递到树突。一个神经元接受了电信号，当接受信号超过一定阈值（threshold）被激发后链接电路，产生一个输出信号。</p><p>对应的，在建构人工结构时，人工神经网络中的神经元可以接受多个输入信号，并将它们加权相加得到总输入左为输入信号，通过内在的阈值函数计算得到输出结果，可以提供信号给更多的神经元。将这种神经元结构复制并构建形成多个层结构的神经网。对应生物功能，人工神经网络结构拥有一个输入层，接受输入信号之后，在其后隐含的多层结构进行相应的梯度运算，传递到输出层经过一定变换得到输出结果。每一层的节点都与所有下一层的节点通过一定的权重直接相连，通过调整节点之间的连接强度或阈值函数的形状来进行节点之间的强度调节。激活函数又称挤压函数, 因为它将一个较大的输入值域映射到较小的区间0到1。不同的激活函数引入给神经网络模型带入了非线性元素，可以处理更为复杂的问题，实际中较为常用的激活函数主要有三种，Sigmoid, tanh, 和ReLU函数。</p><p>ReLU修正线性单元 是现在在深度学习神经网络模型中使用率最高的激活函数，使用它在实际计算中非常高效，收敛速度非常快，但是函数特性可能会导致有一些神经元永远不会被激活，并且这些神经元参数不能被更新。这一般是由于模型参数在初始化的时候采用了全正或者全负的值，或者在后向传播中设置的学习率过高导致的。可以对模型参数使用更高级的初始化方法，比如Xavier方法，以及设置合理的后向传播速率，使用自适应的算法比如Adam算法</p><p>神经网络算法中，最为流行的是后向传播（Back—Propagation），根据网络实际输出结果和目标结果的差异，通过迭代地处理训练元组数据集, 更新权重和反映网络预测误差的偏倚，向后传播误差, 将每个元组的网络预测与实际知道的类标号相比较进行学习，对于每个训练样本, 修改权重使得网络预测和实际类之间的均方误差最小。这种修改“后向”进行，即由输出层，经由每个隐藏层，到第一个隐藏层（因此称作后向传播）。尽管不能保证，一般地，权重将最终收敛，学习过程停止。</p><p>以一个结构为3x3的，有input、hidden、output层组成的，的神经网络作为例，用wih表示输入层到隐藏层的权重矩阵，who表示隐藏层到输出层的权重矩阵，一次训练运算过程如下</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Inputs：输入函数矩阵</span><br><span class="line">Targets：目标结果矩阵</span><br><span class="line">hidden_inputs = wih*inputs<span class="comment">#传递到隐含层</span></span><br><span class="line">hidden_outputs = activation_function(hidden_inputs)<span class="comment">#激活函数</span></span><br><span class="line">final_inputs = who * hidden_outputs<span class="comment">#传递到输出层</span></span><br><span class="line">final_outputs = activation_function(final_inputs) </span><br><span class="line">output_errors = targets - final_outputs <span class="comment">#目标·偏差值</span></span><br><span class="line">hidden_errors = who.T * output_errors<span class="comment">#后向传播误差</span></span><br><span class="line">who += learningrate * (output_errors * final_outputs * (<span class="number">1.0</span> - final_outputs)) * hidden_outputs.T<span class="comment">#更新权重</span></span><br><span class="line">wih += learningrate * (hidden_errors * hidden_outputs * (<span class="number">1.0</span> - hidden_outputs)) * inputs.T</span><br></pre></td></tr></table></figure><p>卷积神经网络</p><p>卷积神经网络架构主要由卷积层，池化层和全连接层等核心层次构成。<br>卷积层（Convolution Layer）的主要作用是对输入的数据进行特征提取，通过卷积层中的卷积核（Filter），按照指定的步长扫描输入的数据，进行卷积运算，得到增强后的特征信息。</p><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/191113/3.png" alt="卷积层"></div><p>池化层（pooling layer）作为卷积神经网络中的一种提取输入数据的核心特征的方式，不仅实现了原始数据的压缩，也大量减少了参与模型数据的参数，提高了一定的计算效率。池化层通过定义一个与步长相等的滑动窗口，提取目标中的重要信息，使整个窗口内的信息量减少。常被用到的有平均池化层和最大池化层，分别取的是窗口内的平均值和最大值。</p><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/191113/4.png" alt="池化层"></div><p>全连接层的主要作用是将输入图像在经过卷积和池化之后提取的特征进行压缩，并根据压缩的特征完成模型的分类功能，即将输入的图像特征与层内预设好的权重参数相乘，得到一个压缩后的分类结果，并经过激活函数的进一步处理使得结果更明显</p><h2 id="研究实现思路"><a class="markdownIt-Anchor" href="#研究实现思路"></a> 研究实现思路</h2><p>遥感影像是通过亮度值或像元值的高低差异以及空间变化来表示不同的地物。遥感影像分类就是利用计算机对遥感影像中各类地物的光谱信息和空间信息进行分析，选择作为分类判据的特征，并用一定的手段将特征空间划分为互不重叠的子空间，然后将图像中的各个像元划归到各个子空间去。</p><p>CNN将人工神经网络技术和深度学习方法相结合，用一种基于梯度的改进反向传播法来训练网络中的权重，实现了深度学习的多层过滤器网络结构以及过滤器和分类器结合的全局训练算法，其降低了网络模型的复杂度，减少了权值的数量，在视觉图像处理领域进行的实验，得到了很好的效果，目前已成为目前图像识别领域的研究热点。</p><p>CNN利用空间关系减少需要学习的参数数目以提高一般神经网络算法的训练性能。CNN的特征监测层通过训练数据来进行学习,避免了显式的特征提取，而是隐式地从训练数据中学习特征，而且同一特征映射面上的神经元权值相同，网络可以并行学习，这也是卷积神经网络相对于其他神经网络的一个优势。在CNN中，图像的一小部分（局部感受区域）作为层级结构的最低层输入，信息再依次传输到其他不同的层，每层通过一个数字滤波器去获取观测显著特征，同时避免了特征提取和分类过程中数据重建的复杂度。</p><h2 id="尺度网络搭建"><a class="markdownIt-Anchor" href="#尺度网络搭建"></a> 尺度网络搭建</h2><p>获得高质量模型最保险的做法就是增加模型的深度（层数）或者是其宽度（层核或者神经元数但是一般情况下更深或更宽的网络会出现以下问题：<br>-1. 参数太多，容易过拟合，若训练数据集有限，这一问题更加突出；<br>-2. 网络越大计算复杂度越大，难以应用；<br>-3. 网络越深，梯度越往后穿越容易消失，难以优化模型;</p><p>GoogLeNet认为根本方法是将全连接甚至一般的卷积都转化为稀疏连接，提出了名为Inception的模块化结构来实现此目的，依据是大量的文献表明可以将稀疏矩阵聚类为较为密集的子矩阵来提高计算性能。GoogLeNet做了更大胆的网络上的尝试而不像VGG继承了LENet以及AlexNet的一些框架，该模型虽然有22层，但参数量只有AlexNet的1/12。</p><p>Inception结构在3x3前，5x5前，max pooling后分别加上了1x1的卷积核起到了降低feature map厚度的作用。</p><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/191113/6.png" alt="池化层"></div><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/191113/7.png" alt="池化层"></div><h2 id="裁剪样本"><a class="markdownIt-Anchor" href="#裁剪样本"></a> 裁剪样本</h2><p>由于GoogleNet网络模型输入要求为256×256像素，而在分辨率不高的SAR图像中，所代表的范围过大，包含地物很难保持一致，因此对于裁剪后的地物块进行重采样，根据分割对象大小决定对原始数据首先进行2m重采样处理, 并以此为为原始数据。如仍大小不符合输入数据尺寸，可以考虑二次乃至三次的重采样，直到大小符合输入矩阵的大小为止。</p><p>为满足不同尺度下SAR图像样本类别的判定，对预处理之后的图像，分别制作2、1、0.5m的训练样本集，构建多尺度网络模型。其中，利用３种不同重采样分辨率的样本进行不同尺度的网络模型的训练后得到的训练精度分别为９４．８９％、９２．６５％和８９．５７％。可以看到，随着样本尺度的降低，模型训练精度随之降低</p><p>对原始影像进行上采样并没有增加图像本身包含的信息，在同样的像素数标准下，重采样分 辨率越高，其包含的信息越少。而卷积神经网络的工作方式就是对图像进行不断向更高层次的特 征抽象，因此模型分类性能非常依赖图像包含的有效信息量，图像本身包含的有效信息越丰富， 在同样的网络训练条件下，模型分类性能越好。 通过对验证集的预测实验也证实了这个精度下降 的规律。</p><p>针对每个多尺度分割形成的对象，进行内部 样本类别统计，以确定此对象的最终类别属性， 判定原则为多数投票法。即对每个对象中裁取的 所有样本进行类别统计，同一类别样本数最多的 样本类别，即为此对象的类别。实验采用径向基函数神经网络分类算法和经典的复Wishart分类作为对比参考。</p><h2 id="进行分类"><a class="markdownIt-Anchor" href="#进行分类"></a> 进行分类</h2><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/191113/8.png" alt="池化层"></div><p>将采集到的3种尺度的样本分别输入不同尺度GoogleNet网络模型，进行样本所属类别预测。针对每个多尺度分割形成的对象，进行内部样本类别统计，以确定此对象的最终类别属性,判定原则为多数投票法。即对每个对象中裁取的所有样本进行类别统计，同一类别样本数最多的样本类别，即为此对象的类别。</p><p>算法的分类结果各地物较为完整,可以更多地考虑不同地物类型的纹理特征而不会对同一种地物类型进行割裂，结合了多尺度分割和深度学习,因此在分割结果中不仅保留了良好的不同地物类型之间的边界,也能够得到较高的分类准确性</p><h2 id="精度评定"><a class="markdownIt-Anchor" href="#精度评定"></a> 精度评定</h2><p>若要评价某一变化检测技术的优劣，除了人眼对其产生的结果图主观评判之外，还需要把结果图和标准参考图相对比，并通过几个量化的指标来客观评判。变化检测任务本质上是一个分类问题，因此本文中使用相应分类的评价指标来衡量不同变化检测技术性能的优劣。<br>对一帧遥感影像进行专题分类后需要进行分类精度的评价，评价精度的因子有混淆矩阵、总体分类精度、Kappa系数、错分误差、漏分误差、每一类的制图精度和用户精度等。<br>混淆矩阵（Confusion Matrix）主要用于比较分类结果和地表真实信息的差异，可以把分类结果的精度显示在一个混淆矩阵里面。混淆矩阵是通过将每个地表真实像元的位置和分类与分类图象中的相应位置和分类像比较计算的。混淆矩阵的每一列代表了一个地表真实分类，每一列中的数值等于地表真实像元在分类图象中对应于相应类别的数量，有像元数和百分比表示两种。<br>可以将结果分为四类： 真正(True Positive, TP)：被模型分类正确的正样本； 假负(False Negative, FN)：被模型分类错误的正样本； 假正(False Positive, FP)：被模型分类错误的负样本； 真负(True Negative, TN)：被模型分类正确的负样本；</p><p>真正率(True Positive Rate, TPR)，又名灵敏度(Sensitivity)：分类正确的正样本个数占整个正样本个数的比例，即：</p><pre><code>TPR = TP / (TP + FN)</code></pre><p>假负率(False Negative Rate, FNR)：分类错误的正样本的个数占正样本的个数的比例，即：</p><pre><code>TNR = FN / (TP + FN)</code></pre><p>假正率(False Positive Rate, FPR)：分类错误的负样本个数占整个负样本个数的比例，即：</p><pre><code>FPR = FP / (FP + TN)</code></pre><p>真负率(True Negative Rate, TNR)：分类正确的负样本的个数占负样本的个数的比例，即：</p><pre><code>TNR = TN / (FP + TN)</code></pre><p>准确率(Accuracy)：分类正确的样本个数占所有样本个数的比例，即：</p><pre><code>ACCURACY = (TP + TN) / (TP + FN + FP + TN)</code></pre><p>平均准确率(Average per-class accuracy)：每个类别下的准确率的算术平均，即：</p><pre><code>AVERAGE_ACCURACY = (TPR + TNR) / 2</code></pre><p>精确率(Precision)：分类正确的正样本个数占分类器分成的所有正样本个数的比例（注意：精确率和准确率不同），即：</p><pre><code>P = TP / (TP + FP)</code></pre><p>召回率(Recall)：分类正确的正样本个数占正样本个数的比例，即：</p><pre><code>R = TP / (TP + FN)</code></pre><p>Kappa系数(Kappa coefficient, KC)是另外一种计算分类精度的方法。它是通过把所有地表真实分类中的像元总数（N）乘以混淆矩阵对角线（Xkk）的和，再减去某一类中地表真实像元总数与该类中被分类像元总数之积对所有类别求和的结果，再除以总像元数的平方差减去某一类中地表真实像元总数与该类中被分类像元总数之积对所有类别求和的结果所得到的。kappa的值越高，结果越好</p><p>假设图像的总像素为N，参考图像中未改变的像素数量为Nu，改变的像素的数量为Nc。于是我们将参考图像（ground truth）与用算法产生的变化图像进行逐像素比较。<br>则有：</p><pre><code>Nu=FP+TNNc=FN+TPOE=FN+FPKC = (PRA−PRE) / (1−PRE)</code></pre><p>其中：</p><pre><code>PRA = (TP+TN) / NPRE = ((TP + FP) * Nc + (FN + TN) * Nu) / N2</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;介绍&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#介绍&quot;&gt;&lt;/a&gt; 介绍&lt;/h2&gt;
&lt;p&gt;目前应用于高分辨率遥感影像分类的常用算法,其精度已无法满足大数据环境下的分类要求的问题，对于全新方法的探索十分迫切。&lt;/p&gt;
&lt;div alig
      
    
    </summary>
    
      <category term="深度学习" scheme="http://yoursite.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="遥感影像分类" scheme="http://yoursite.com/tags/%E9%81%A5%E6%84%9F%E5%BD%B1%E5%83%8F%E5%88%86%E7%B1%BB/"/>
    
      <category term="极化SAR影像" scheme="http://yoursite.com/tags/%E6%9E%81%E5%8C%96SAR%E5%BD%B1%E5%83%8F/"/>
    
      <category term="卷积神经网络" scheme="http://yoursite.com/tags/%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>数字测图实习 - CAD二次开发</title>
    <link href="http://yoursite.com/2019/08/31/%E6%95%B0%E5%AD%97%E6%B5%8B%E5%9B%BE%E5%AE%9E%E4%B9%A0-CAD%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    <id>http://yoursite.com/2019/08/31/数字测图实习-CAD二次开发/</id>
    <published>2019-08-31T04:15:20.000Z</published>
    <updated>2019-09-02T13:39:18.678Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础知识"><a class="markdownIt-Anchor" href="#基础知识"></a> <em>基础知识</em></h2><p><strong>形文件的编写</strong></p><p>形文件的格式: 最后一行一回车结束；形编号取值1-158；形名称必须大写；形文件的每一行最多可包含128个字符；字节数量表示从第二行开始的短句数目，包括最后的结束符0；一个shp文件中可以包括多个形文件，且与文件名没有关系；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">形编号，字节数量，形名称(大写）</span><br><span class="line">代码1，代码2，···，0</span><br></pre></td></tr></table></figure><p>常用格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">标准矢量 格式：0DF</span><br><span class="line">普通矢量 格式：08,（ Δx,Δy, ）</span><br><span class="line">多段连续的矢量 格式：09,（ Δx,Δy ,··· Δxn,Δyn,0,0 ）</span><br><span class="line">八分圆弧 格式：0A,R,±0SC</span><br><span class="line">普通圆弧 格式：0B,start_offset,end_offset,high_radius,radius,±0SC</span><br><span class="line">普通圆弧 格式：0C, Δx,Δy, ,±凸度      凸度=±127*2H/D</span><br><span class="line">连续圆弧 格式：0D,(Δx1,Δy1, ,±凸度1,···, Δxn,Δyn, ,±凸度n,0,0)</span><br><span class="line">引用子形 格式：07,子形编号</span><br></pre></td></tr></table></figure><p>绘制过程：compile load shape</p><p><strong>线性文件的编写</strong></p><p>简单线型的定义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">简单线型的定义</span><br><span class="line">标题行：*linetype-name[,description]</span><br><span class="line">描述行：A，patdesc1,patdesc2,patdesc3,······</span><br><span class="line">*：标题行的标记；</span><br><span class="line">A：表示对齐方式,两端对齐；</span><br><span class="line">Patdesci:短划线的长度。若Patdesci&gt;0，表示是实线段长，若Patdesci&lt;0，表示是虚线段长，若Patdesci=0，表示是一个点。</span><br><span class="line"></span><br><span class="line">定义嵌入文本的线型</span><br><span class="line">标题行：</span><br><span class="line">*linetype-name[,description]</span><br><span class="line">描述行：</span><br><span class="line">A，p1,p2,···,[“string”,stylename,R=n,A=n,S=n,X=n,Y=n],pi,pi+1,···</span><br><span class="line"></span><br><span class="line">R为相对于当前线段的旋转角；A为相对于水平方向的旋转角。两者默认值均为0。</span><br><span class="line">S为比例因子，如果字样为固定高，则S与字样高度相乘；如果字样高度不固定，则S为字样高。S的默认值为1。</span><br><span class="line">X，Y为偏移距离，默认值为0。</span><br><span class="line"></span><br><span class="line">定义嵌入符号的线型</span><br><span class="line">标题行：</span><br><span class="line">*linetype-name[,description]</span><br><span class="line">描述行：</span><br><span class="line">A，p1,p2,···,[shapename,shapefile,R=n,A=n,S=n,X=n,Y=n],pi,pi+1,···</span><br></pre></td></tr></table></figure><p><strong>填充文件的编写</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">定义CAD图案填充符号</span><br><span class="line">*name</span><br><span class="line">Angle,X-0rgin,Y-orgin,D-L,D-offset,L1,L2,…..</span><br><span class="line">Name：图案名称</span><br><span class="line">Angle：填充线的角度</span><br><span class="line">X-orgin:填充线起点X坐标</span><br><span class="line">Y-orgin :填充线起点Y坐标</span><br><span class="line">D-L：下一根线在长度方向的位移</span><br><span class="line">D-offset：下一根线在垂直方向上的位移</span><br><span class="line">L:线型描述</span><br></pre></td></tr></table></figure><h2 id="day1-shp-files"><a class="markdownIt-Anchor" href="#day1-shp-files"></a> DAY1 .shp files</h2><p>窑 32</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">*01,24,Y</span><br><span class="line">3,10</span><br><span class="line">1,0A,11,022,</span><br><span class="line">4,10,</span><br><span class="line">3,5,</span><br><span class="line">2,0B0,</span><br><span class="line">4,5,</span><br><span class="line">3,10,</span><br><span class="line">1,0A,11,002,</span><br><span class="line">0B4,</span><br><span class="line">4,10,</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>水塔 30</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">*02,28,ST</span><br><span class="line">2,018,</span><br><span class="line">1,020,</span><br><span class="line">3,5,</span><br><span class="line">2,028,</span><br><span class="line">1,0A4,020,054,058,034,</span><br><span class="line">2,03C,</span><br><span class="line">1,058,05C,020,0AC,</span><br><span class="line">2,0A4,</span><br><span class="line">1,060,</span><br><span class="line">4,5,</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>露天设备 32</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">*03,40,LTSB</span><br><span class="line">3,4,</span><br><span class="line">2,058,</span><br><span class="line">4,4,</span><br><span class="line">3,10,</span><br><span class="line">1,0D4,</span><br><span class="line">4,5,</span><br><span class="line">050,</span><br><span class="line">3,5,</span><br><span class="line">0DC,</span><br><span class="line">4,10,</span><br><span class="line">3,4,</span><br><span class="line">2,058,</span><br><span class="line">4,4,</span><br><span class="line">3,10,</span><br><span class="line">0D4,</span><br><span class="line">1,0C4,</span><br><span class="line">4,10,</span><br><span class="line">3,4,</span><br><span class="line">2,058,</span><br><span class="line">1,0A0,</span><br><span class="line">4,4,</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>水磨坊，水车34</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">*04,29,SMF</span><br><span class="line">3,10</span><br><span class="line">2,068,</span><br><span class="line">0A,6,040</span><br><span class="line">1,088,084</span><br><span class="line">2,0E0,02C,</span><br><span class="line">1,084,080,</span><br><span class="line">2,0EC,028,</span><br><span class="line">1,080,08C,</span><br><span class="line">2,0E8,024,</span><br><span class="line">1,08C,088,</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>气象台（站）42  4.3.78</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">*05,38,QXZ</span><br><span class="line">3,10,</span><br><span class="line">2,068,</span><br><span class="line">1,0C0,</span><br><span class="line">2,068,</span><br><span class="line">4,10,</span><br><span class="line">1,044,</span><br><span class="line">3,10,</span><br><span class="line">1,0F8,066,</span><br><span class="line">2,06E,</span><br><span class="line">1,06A,</span><br><span class="line">2,062,</span><br><span class="line">2,0F0,</span><br><span class="line">1,0F0,030,066,</span><br><span class="line">2,06E,</span><br><span class="line">1,06A,</span><br><span class="line">2,062,</span><br><span class="line">4,10,</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>停泊场（锚地）62</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">*06,49,TBC</span><br><span class="line">1,</span><br><span class="line">0A,2,-061,</span><br><span class="line">3,5,</span><br><span class="line">01C,</span><br><span class="line">2,014,</span><br><span class="line">1,01F,</span><br><span class="line">2,017,</span><br><span class="line">4,5,</span><br><span class="line">1,</span><br><span class="line">0A,2,052,</span><br><span class="line">3,5,</span><br><span class="line">01C,</span><br><span class="line">2,014,</span><br><span class="line">1,019,</span><br><span class="line">2,011,</span><br><span class="line">4,5,</span><br><span class="line">0A,2,-071,</span><br><span class="line">3,2,</span><br><span class="line">1,044,</span><br><span class="line">3,5,</span><br><span class="line">068,0C0,068,</span><br><span class="line">044,</span><br><span class="line">0A,6,060,</span><br><span class="line">4,10,</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>路标 60</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">*07,23,LB</span><br><span class="line">1,010,</span><br><span class="line">2,018,</span><br><span class="line">1,034,</span><br><span class="line">1,</span><br><span class="line">3,50,</span><br><span class="line">09,69,40,-69,-40,69,-40,-69,40,0,0,</span><br><span class="line">4,50,</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>电信交接箱 68</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">*08,43,DXJJX</span><br><span class="line">2,014,1,</span><br><span class="line">3,2,</span><br><span class="line">09,-1,-2,0,4,1,0,0,-2,0,2,1,0,0,-4,-1,2,0,0,</span><br><span class="line">2,02C,</span><br><span class="line">1,028,</span><br><span class="line">2,014,</span><br><span class="line">1,010,</span><br><span class="line">2,020,</span><br><span class="line">1,010,</span><br><span class="line">2,01C,</span><br><span class="line">1,028,</span><br><span class="line">4,2,</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>信号杆 62</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">*09,21,XHG</span><br><span class="line">3,2,</span><br><span class="line">1,018,020,018,074,028,040,</span><br><span class="line">3,5,</span><br><span class="line">2,048,</span><br><span class="line">1,08C,</span><br><span class="line">0A,4,020,</span><br><span class="line">4,10,</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>路灯 48</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">*10,24,LD</span><br><span class="line">3,10,</span><br><span class="line">1,078,03C,</span><br><span class="line">0A,4,020,</span><br><span class="line">034,0E0,03C,</span><br><span class="line">0A,4,020,</span><br><span class="line">034,078,0FC,03C,</span><br><span class="line">0A,5,020,</span><br><span class="line">4,10,</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h2 id="day2-lin-files"><a class="markdownIt-Anchor" href="#day2-lin-files"></a> DAY2 .lin files</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">*xuxian, - - - - -</span><br><span class="line">A,1,-1</span><br><span class="line"></span><br><span class="line">*dianhuaxian, __ . __</span><br><span class="line">A,4,-1,0,-1</span><br><span class="line"></span><br><span class="line">*shui, - water -</span><br><span class="line">A,10,[&quot;WATER&quot;,standard,R=0,A=0,S=1,X=0.5,Y=-0.5],-6</span><br><span class="line"></span><br><span class="line">*weidingjie,___ _ ___</span><br><span class="line">A,4.5,-1,1.5,-1</span><br><span class="line"></span><br><span class="line">*hot, - hot -</span><br><span class="line">A,8,[HOT,C:\Users\sheld\Desktop\housework\shape for lines.shx],-2,8,[&quot;HOT&quot;,standard,R=0,A=0,S=1,X=0.5,Y=-0.5],-4,8,[HOT,C:\Users\sheld\Desktop\housework\shape for lines.shx],-2,8</span><br><span class="line"></span><br><span class="line">*shilong</span><br><span class="line">A,0,[SHILEI,C:\Users\sheld\Desktop\housework\shape for lines.shx],-2</span><br><span class="line"></span><br><span class="line">*shui2</span><br><span class="line">A,10,[CIRCLE,C:\Users\sheld\Desktop\housework\shape for lines.shx],-1</span><br><span class="line"></span><br><span class="line">*doubleline2,=(简陋版)</span><br><span class="line">A,0,[DOUBLELINE,C:\Users\sheld\Desktop\housework\shape for lines.shx,Y=1],-1</span><br><span class="line"></span><br><span class="line">*tiesiwang, - X -(简陋版)</span><br><span class="line">A,8,[&quot;X&quot;,standard,R=0,A=0,S=1,X=0.5,Y=-0.5],-2</span><br><span class="line"></span><br><span class="line">*zhalan, - + -(简陋版)</span><br><span class="line">A,8,[&quot;+&quot;,standard,R=0,A=0,S=1,X=0.5,Y=-0.5],-2</span><br></pre></td></tr></table></figure><p>shape for lines</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">*1,17,SHILEI</span><br><span class="line">3,10,</span><br><span class="line">1,</span><br><span class="line">09,12,8,8,-8,-8,-8,-12,8,0,0</span><br><span class="line">4,10,</span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">*2,9,CIRCLE</span><br><span class="line">3,2,1,0A,1,040,4,2,0</span><br><span class="line"></span><br><span class="line">*3,21,HOT</span><br><span class="line">1,09,</span><br><span class="line">0,1,</span><br><span class="line">2,0,</span><br><span class="line">0,-2,</span><br><span class="line">-2,0,</span><br><span class="line">0,2,</span><br><span class="line">2,-2,</span><br><span class="line">-2,0,</span><br><span class="line">2,2,</span><br><span class="line">0,0,</span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">*4,9,DOUBLELINE</span><br><span class="line">2,014,</span><br><span class="line">1,010,</span><br><span class="line">2,02C,</span><br><span class="line">1,018,</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h2 id="day3-pat-files"><a class="markdownIt-Anchor" href="#day3-pat-files"></a> DAY3 .pat files</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">*HD</span><br><span class="line">0,0,0,10,10,2.5,-17.5</span><br><span class="line">90,0.6,0,10,10,1.3,-18.7</span><br><span class="line">90,1.9,0,10,10,1.3,-18.7</span><br><span class="line"></span><br><span class="line">*SNT</span><br><span class="line">0,0.1,0.1,1.5,1.5,0,-1.5</span><br><span class="line">0,0,0,3.0,1.5,3,-3</span><br><span class="line"></span><br><span class="line">*ST</span><br><span class="line">0,0,0,10,10,1,-19</span><br><span class="line">90,0,0,10,10,2.5,-17.5</span><br><span class="line"></span><br><span class="line">*TC</span><br><span class="line">90,0,0,0,20,3.6,-17</span><br><span class="line">90,1.2,0,0,20,3.6,-17</span><br><span class="line">90,10,10,0,20,3.6,-17</span><br><span class="line">90,11.2,10,0,20,3.6,-17</span><br><span class="line"></span><br><span class="line">*XIAN</span><br><span class="line">90,0,0,0,20,3.6,-17</span><br><span class="line">90,1.2,0,0,20,3.6,-17</span><br><span class="line">90,2.4,0,0,20,3.6,-17</span><br><span class="line">90,10,10,0,20,3.6,-17</span><br><span class="line">90,11.2,10,0,20,3.6,-17</span><br><span class="line">90,12.4,10,0,20,3.6,-17</span><br><span class="line"></span><br><span class="line">*YJD</span><br><span class="line">90,0,0,0,40,3.6,-17</span><br><span class="line">90,1.2,0.6,0,40,3.6,-17</span><br><span class="line">90,2.4,1.2,0,40,3.6,-17</span><br><span class="line">90,10,10,0,40,3.6,-17</span><br><span class="line">90,11.2,10.6,0,40,3.6,-17</span><br><span class="line">90,12.4,11.2,0,40,3.6,-17</span><br><span class="line">90,20,1.2,0,40,3.6,-17</span><br><span class="line">90,21.2,0.6,0,40,3.6,-17</span><br><span class="line">90,22.4,0,0,40,3.6,-17</span><br><span class="line">90,30,11.2,0,40,3.6,-17</span><br><span class="line">90,31.2,10.6,0,40,3.6,-17</span><br><span class="line">90,32.4,10,0,40,3.6,-17</span><br><span class="line"></span><br><span class="line">*YND</span><br><span class="line">0,0,0,3.0,1.5,3,-3</span><br></pre></td></tr></table></figure><h2 id="day4-day6-vlisp"><a class="markdownIt-Anchor" href="#day4-day6-vlisp"></a> DAY4-DAY6 VLISP</h2><p>2.1数据转换程序<br>1,X,Y,H or 1,X Y H -&gt; 1 Y X H</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">defun</span> c<span class="symbol">:sjzh</span>()</span><br><span class="line">  (<span class="name">setq</span> ff (<span class="name">open</span>(<span class="name">getfiled</span> <span class="string">"请选择需转换数据文件:"</span> <span class="string">""</span> <span class="string">"txt"</span> <span class="number">2</span>) <span class="string">"r"</span>)) <span class="comment">;getfiled  读取模式</span></span><br><span class="line">  (<span class="name">setq</span> rr (<span class="name">open</span> <span class="string">"c:\\Users\\sheld\\Desktop\\housework\\vlisp\\data\\zhjg.txt"</span> <span class="string">"w"</span>)) <span class="comment">;写入模式</span></span><br><span class="line">  <span class="comment">;;;</span></span><br><span class="line">  <span class="comment">;;;;;</span></span><br><span class="line">  (<span class="name">while</span> (<span class="name">setq</span> zb (<span class="name">read-line</span> ff))               <span class="comment">;循环条件</span></span><br><span class="line"></span><br><span class="line">    (<span class="name">progn</span></span><br><span class="line">    (<span class="name">while</span>(<span class="name">vl-string-search</span> <span class="string">","</span> zb)            <span class="comment">;vl-string-search;在一个字符串中搜寻特定模式</span></span><br><span class="line">      (<span class="name">setq</span> zb (<span class="name">vl-string-subst</span> <span class="string">" "</span> <span class="string">","</span> zb))   <span class="comment">;v1-string-subset;在一个字符串中，用一个字符串替代另一个字符串</span></span><br><span class="line">    )                                          <span class="comment">;用空格代替逗号</span></span><br><span class="line">    (<span class="name">setq</span> zb (<span class="name">read</span>(<span class="name">strcat</span> <span class="string">"("</span> zb <span class="string">")"</span>)))         <span class="comment">;strcat 字符串合并</span></span><br><span class="line">    (<span class="name">setq</span> n1  (<span class="name">vl-princ-to-string</span>(<span class="name">nth</span> <span class="number">0</span> zb)))          <span class="comment">; nth 读取表中的第i+1个元素（从0开始） 1指第二个元素</span></span><br><span class="line">    (<span class="name">setq</span> n2  (<span class="name">vl-princ-to-string</span>(<span class="name">nth</span> <span class="number">2</span> zb)))    <span class="comment">;last 获取最后一个元素 vl-price-to-string;返回LISP数据的字符串代表，</span></span><br><span class="line">    (<span class="name">setq</span> n3  (<span class="name">vl-princ-to-string</span>(<span class="name">nth</span> <span class="number">1</span> zb)))</span><br><span class="line">    (<span class="name">setq</span> n4  (<span class="name">vl-princ-to-string</span>(<span class="name">nth</span> <span class="number">3</span> zb)))</span><br><span class="line">    (<span class="name">setq</span> zb (<span class="name">strcat</span> n1 <span class="string">" "</span> n2 <span class="string">" "</span> n3 <span class="string">" "</span> n4))   <span class="comment">;调换顺序</span></span><br><span class="line">    (<span class="name">write-line</span> zb  rr) <span class="comment">;按行写入文本文件</span></span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line">  (<span class="name">close</span> rr)              <span class="comment">;关闭流</span></span><br><span class="line">  (<span class="name">close</span> ff)</span><br><span class="line">  )</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">2.2创建图层程序</span><br><span class="line"></span><br><span class="line">(<span class="name">defun</span> c<span class="symbol">:xjtc</span>()</span><br><span class="line">(<span class="name">entmake</span> (<span class="name">list</span> '(<span class="number">0</span> . <span class="string">"LAYER"</span>)    <span class="comment">;entmake创建实体，0：实体类型</span></span><br><span class="line">(<span class="number">100</span> . <span class="string">"AcDbSymbolTableRecord"</span>)    <span class="comment">;子类标记</span></span><br><span class="line">(<span class="number">100</span> . <span class="string">"AcDbLayerTableRecord"</span>)    <span class="comment">;子类标记</span></span><br><span class="line">(<span class="number">70</span> . <span class="number">0</span>)        <span class="comment">;70:可见</span></span><br><span class="line">(<span class="number">6</span> . <span class="string">"Continuous"</span>)     <span class="comment">;6:线型</span></span><br><span class="line">(<span class="number">62</span> . <span class="number">7</span>)<span class="comment">;62:颜色</span></span><br><span class="line">(<span class="number">370</span> . <span class="number">0</span>)<span class="comment">;370：线宽</span></span><br><span class="line">(<span class="name">cons</span> <span class="number">2</span> <span class="string">"new layer"</span>)))<span class="comment">;2：图层名</span></span><br><span class="line">  )</span><br></pre></td></tr></table></figure><p>2.3展点程序<br>点号与点，高程分层</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">defun</span> c<span class="symbol">:kszd2</span>()</span><br><span class="line">(<span class="name">vl-load</span> com) <span class="comment">;加载支持函数</span></span><br><span class="line">(<span class="name">setq</span> acadObject   (<span class="name">vlax-get-acad-object</span>)) <span class="comment">;建立连接</span></span><br><span class="line">(<span class="name">setq</span> acadDocument (<span class="name">vla-get-ActiveDocument</span>  acadObject))</span><br><span class="line">(<span class="name">setq</span> mySpace      (<span class="name">vla-get-ModelSpace</span>      acadDocument))</span><br><span class="line">(<span class="name">setq</span> Layer-pt-Ele <span class="string">"高程注记"</span></span><br><span class="line">      Layer-pt-Sn  <span class="string">"点号注记"</span></span><br><span class="line">      Layer-pt     <span class="string">"展点"</span></span><br><span class="line">)</span><br><span class="line">(<span class="name">if</span> (<span class="name">=</span>(<span class="name">tblsearch</span>  <span class="string">"layer"</span> Layer-pt-Ele)<span class="literal">nil</span>)</span><br><span class="line">    (<span class="name">command</span> <span class="string">"layer"</span> <span class="string">"n"</span> Layer-pt-Ele <span class="string">""</span>))</span><br><span class="line">(<span class="name">if</span> (<span class="name">=</span>(<span class="name">tblsearch</span>  <span class="string">"layer"</span> Layer-pt-Sn)<span class="literal">nil</span>)</span><br><span class="line">    (<span class="name">command</span> <span class="string">"layer"</span> <span class="string">"n"</span> Layer-pt-Sn <span class="string">""</span>))</span><br><span class="line">(<span class="name">if</span> (<span class="name">=</span>(<span class="name">tblsearch</span>  <span class="string">"layer"</span> Layer-pt)<span class="literal">nil</span>)</span><br><span class="line">    (<span class="name">command</span> <span class="string">"layer"</span> <span class="string">"n"</span> Layer-pt <span class="string">""</span>))</span><br><span class="line">(<span class="name">setvar</span> <span class="string">"cmdecho"</span> <span class="number">0</span>)</span><br><span class="line">(<span class="name">setvar</span> <span class="string">"osmode"</span>  <span class="number">0</span>)</span><br><span class="line">(<span class="name">setvar</span> <span class="string">"clayer"</span>  Layer-pt)</span><br><span class="line">(<span class="name">setq</span>  Pt-list <span class="literal">nil</span>)</span><br><span class="line">(<span class="name">setq</span>  F-coordinates (<span class="name">open</span>(<span class="name">getfiled</span> <span class="string">"请选择数据文件:"</span> <span class="string">""</span> <span class="string">"txt"</span> <span class="number">2</span>)<span class="string">"r"</span>))</span><br><span class="line">(<span class="name">while</span> (<span class="name">setq</span> Info-Line(<span class="name">read-line</span> F-coordinates))</span><br><span class="line">  </span><br><span class="line">    (<span class="name">while</span>(<span class="name">vl-string-search</span> <span class="string">","</span> Info-Line)</span><br><span class="line">      (<span class="name">setq</span> Info-Line(<span class="name">vl-string-subst</span> <span class="string">" "</span> <span class="string">","</span> Info-Line)))</span><br><span class="line"></span><br><span class="line">              (<span class="name">setq</span> Info-Line (<span class="name">read</span> (<span class="name">strcat</span> <span class="string">"("</span>Info-Line <span class="string">")"</span>))</span><br><span class="line"></span><br><span class="line">    pt-sigle  (<span class="name">list</span></span><br><span class="line">(<span class="name">nth</span> <span class="number">2</span> Info-Line)</span><br><span class="line">(<span class="name">nth</span> <span class="number">1</span> Info-Line)</span><br><span class="line">(<span class="name">nth</span> <span class="number">3</span> Info-Line))</span><br><span class="line">    sn  (<span class="name">vl-princ-to-string</span> (<span class="name">car</span> Info-Line))</span><br><span class="line">    ele (<span class="name">vl-princ-to-string</span> (<span class="name">last</span> Info-Line))</span><br><span class="line">    pt-list(<span class="name">append</span> pt-list(<span class="name">list</span>(<span class="name">list</span> pt-sigle sn ele)))</span><br><span class="line">)</span><br><span class="line">      )</span><br><span class="line">(<span class="name">close</span> F-coordinates)</span><br><span class="line">(<span class="name">setq</span> Pt-sort (<span class="name">vl-sort</span> Pt-list</span><br><span class="line">  '(lambda (e1 e2)</span><br><span class="line">     (&lt; (car (car e1))</span><br><span class="line">(car (car e2)))))</span><br><span class="line">          x0 (<span class="name">car</span> (<span class="name">car</span> (<span class="name">car</span> Pt-sort)))</span><br><span class="line">          x1 (<span class="name">car</span> (<span class="name">car</span> (<span class="name">last</span> Pt-sort)))</span><br><span class="line">          Pt-sort (<span class="name">vl-sort</span> Pt-list</span><br><span class="line">      '(lambda (e1 e2)</span><br><span class="line"> (&lt; (cadr (car e1))</span><br><span class="line">    (cadr (car e2))</span><br><span class="line">    )</span><br><span class="line"> )</span><br><span class="line">      )</span><br><span class="line">          y0 (<span class="name">cadr</span> (<span class="name">car</span> (<span class="name">car</span> Pt-sort)))</span><br><span class="line">          y1 (<span class="name">cadr</span> (<span class="name">car</span> (<span class="name">last</span> Pt-sort)))</span><br><span class="line">    )</span><br><span class="line">(<span class="name">command</span> <span class="string">"zoom"</span> <span class="string">"w"</span>(<span class="name">list</span> x0 y0) (<span class="name">list</span> x1 y1))</span><br><span class="line"></span><br><span class="line">(<span class="name">setq</span> note-ele-set (<span class="name">ssadd</span>)</span><br><span class="line">      note-sn-set  (<span class="name">ssadd</span>))</span><br><span class="line">(<span class="name">foreach</span> pt-every Pt-list</span><br><span class="line">  (<span class="name">setq</span> pt1(<span class="name">car</span> pt-every)  <span class="comment">;坐标点</span></span><br><span class="line">pt2(<span class="name">mapcar</span> '+ pt1 '( <span class="number">1.5</span>  <span class="number">-1.25</span>  <span class="number">0.0</span>))  <span class="comment">;高程注记位置</span></span><br><span class="line">pt3(<span class="name">mapcar</span> '+ pt1 '(<span class="number">-5.5</span>  <span class="number">-1.25</span>  <span class="number">0.0</span>))  <span class="comment">;点号注记位置</span></span><br><span class="line">  )</span><br><span class="line">  (<span class="name">setq</span> note-ele (<span class="name">last</span> pt-every)</span><br><span class="line">note-sn  (<span class="name">cadr</span> pt-every)</span><br><span class="line">  )</span><br><span class="line">  (<span class="name">setq</span> pt1-obj (<span class="name">vlax-3d-point</span> pt1)</span><br><span class="line">pt2-obj (<span class="name">vlax-3d-point</span> pt2)</span><br><span class="line">pt3-obj (<span class="name">vlax-3d-point</span> pt3)</span><br><span class="line">)</span><br><span class="line">  (<span class="name">vla-AddPoint</span> mySpace  pt1-obj)</span><br><span class="line">  (<span class="name">vla-Addtext</span>  mySpace  note-ele pt2-obj <span class="number">3</span>)</span><br><span class="line">  (<span class="name">ssadd</span> (<span class="name">entlast</span>) note-ele-set)</span><br><span class="line">  (<span class="name">vla-Addtext</span>  mySpace  note-sn  pt3-obj <span class="number">3</span>)</span><br><span class="line">  (<span class="name">ssadd</span> (<span class="name">entlast</span>) note-sn-set)</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  (<span class="name">command</span> <span class="string">"select"</span> note-ele-set <span class="string">""</span>)</span><br><span class="line">(<span class="name">setq</span> ss-ele (<span class="name">vla-get-ActiveSelecrtionSet</span> acadDocument))</span><br><span class="line">(<span class="name">vlax-for</span> ele-every ss-ele (<span class="name">vla-put-layer</span> ele-every Layer-Pt-Ele))</span><br><span class="line"></span><br><span class="line">(<span class="name">command</span> <span class="string">"select"</span> note-sn-set <span class="string">""</span>)</span><br><span class="line">(<span class="name">setq</span> ss-sn (<span class="name">vla-get-ActiveSelecrtionSet</span> acadDocument))</span><br><span class="line">(<span class="name">vlax-for</span> sn-every ss-sn (<span class="name">vla-put-layer</span> sn-every Layer-Pt-Sn))</span><br><span class="line">(<span class="name">princ</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>2.4陡坎绘制程序</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">defun</span> dk_single() <span class="comment">;定义函数 无参数 绘制单条陡坎</span></span><br><span class="line">  (<span class="name">setq</span> distance_line (<span class="name">distance</span> first_p end_p))<span class="comment">; 赋值函数 例如 setq a 3</span></span><br><span class="line">  (<span class="name">setq</span> repeat_time (<span class="name">fix</span> (<span class="name">/</span> distance_line <span class="number">4</span>))) <span class="comment">;设置重复次数</span></span><br><span class="line"></span><br><span class="line">  (<span class="name">setq</span> angle_line (<span class="name">angle</span> first_p end_p))</span><br><span class="line">  (<span class="name">setq</span> angle_vertical (<span class="name">+</span> angle_line (<span class="name">/</span> (<span class="name">*</span> fx pi) <span class="number">2.0</span>)))</span><br><span class="line">  (<span class="name">command</span> <span class="string">"line"</span> first_p end_p <span class="string">""</span>)<span class="comment">; 画直线</span></span><br><span class="line">  (<span class="name">setq</span> pt1 first_p)</span><br><span class="line">  (<span class="name">repeat</span> repeat_time</span><br><span class="line">    (<span class="name">setq</span> pt2 (<span class="name">polar</span> pt1 angle_vertical <span class="number">5.0</span>)) <span class="comment">;极坐标获取点坐标</span></span><br><span class="line">    (<span class="name">setq</span> pt3 (<span class="name">polar</span> pt1 angle_line <span class="number">2.0</span>))</span><br><span class="line">    (<span class="name">setq</span> pt4 (<span class="name">polar</span> pt3 angle_vertical <span class="number">1.0</span>))</span><br><span class="line">    (<span class="name">command</span> <span class="string">"line"</span> pt1 pt2 <span class="string">""</span>)</span><br><span class="line">    (<span class="name">command</span> <span class="string">"line"</span> pt3 pt4 <span class="string">""</span>)</span><br><span class="line">    (<span class="name">setq</span> pt1 (<span class="name">polar</span> pt3 angle_line <span class="number">2.0</span>))</span><br><span class="line">    )</span><br><span class="line">  (<span class="name">setq</span> pt1 (<span class="name">polar</span> first_p angle_line (<span class="name">*</span> repeat_time <span class="number">4.0</span>))) <span class="comment">;</span></span><br><span class="line">  (<span class="name">setq</span> distance_rest (<span class="name">distance</span> pt1 end_p))</span><br><span class="line">  (<span class="name">setq</span> pt2 (<span class="name">polar</span> pt1 angle_vertical <span class="number">5.0</span>))</span><br><span class="line">  (<span class="name">command</span> <span class="string">"line"</span> pt1 pt2 <span class="string">""</span>)</span><br><span class="line">  (<span class="name">if</span></span><br><span class="line">    (<span class="name">=</span> (<span class="name">fix</span> (<span class="name">/</span> distance_rest <span class="number">2</span>)) <span class="number">1</span>)</span><br><span class="line">       (<span class="name">progn</span> </span><br><span class="line">(<span class="name">setq</span> pt3 (<span class="name">polar</span> pt1 angle_line <span class="number">2.0</span>))</span><br><span class="line">    (<span class="name">setq</span> pt4 (<span class="name">polar</span> pt3 angle_vertical <span class="number">1.0</span>))</span><br><span class="line">    (<span class="name">command</span> <span class="string">"line"</span> pt3 pt4 <span class="string">""</span>)</span><br><span class="line">(<span class="name">command</span> <span class="string">"line"</span> pt1 end_p <span class="string">""</span>)</span><br><span class="line">)</span><br><span class="line">    (<span class="name">command</span> <span class="string">"line"</span> pt1 end_p <span class="string">""</span>)</span><br><span class="line">   )</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">(<span class="name">defun</span> c<span class="symbol">:hzdk</span>()</span><br><span class="line">  (<span class="name">setq</span> old_os (<span class="name">getvar</span> <span class="string">"osmode"</span>))</span><br><span class="line">  (<span class="name">setvar</span> <span class="string">"osmode"</span> <span class="number">0</span>)</span><br><span class="line">  </span><br><span class="line">  (<span class="name">setvar</span> <span class="string">"Limmin"</span> '(<span class="number">0.0</span> <span class="number">0.0</span>))</span><br><span class="line">  (<span class="name">setvar</span> <span class="string">"Limmax"</span> '(<span class="number">420.0</span> <span class="number">297.0</span>))</span><br><span class="line">  (<span class="name">command</span> <span class="string">"zoom"</span> <span class="string">"all"</span>)</span><br><span class="line"></span><br><span class="line">  (<span class="name">setq</span> first_p (<span class="name">getpoint</span> <span class="string">"\n enter a point"</span>))</span><br><span class="line">  (<span class="name">setq</span> end_p (<span class="name">getpoint</span> first_p <span class="string">"\n enter a point"</span>))</span><br><span class="line">  (<span class="name">initget</span> <span class="string">"Left Right"</span>)</span><br><span class="line">  (<span class="name">setq</span> side (<span class="name">getkword</span> <span class="string">"\n choose the side of DP(Left or Right)&lt;Left&gt;"</span>))</span><br><span class="line">  (<span class="name">if</span></span><br><span class="line">   (<span class="name">=</span> side <span class="string">"Right"</span>)</span><br><span class="line">   (<span class="name">setq</span> fx <span class="number">-1.0</span>)</span><br><span class="line">   (<span class="name">setq</span> fx <span class="number">1.0</span>)</span><br><span class="line">   )</span><br><span class="line"></span><br><span class="line">  (<span class="name">while</span> end_p <span class="comment">;点存在</span></span><br><span class="line">    (<span class="name">progn</span> <span class="comment">;语句组</span></span><br><span class="line">      (<span class="name">dk_single</span>)</span><br><span class="line">      (<span class="name">setq</span> first_p end_p)</span><br><span class="line">      (<span class="name">setq</span> end_p (<span class="name">getpoint</span> first_p <span class="string">"\n enter a point"</span>))</span><br><span class="line">      )</span><br><span class="line">    </span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">  (<span class="name">command</span> <span class="string">"line"</span> pt1 pt2 <span class="string">""</span>)</span><br><span class="line">  (<span class="name">setvar</span> <span class="string">"osmode"</span> old_os)</span><br><span class="line">  )</span><br></pre></td></tr></table></figure><p>2.5旱地绘制程序</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">defun</span> c<span class="symbol">:tchd</span>()</span><br><span class="line">  (<span class="name">setq</span> os (<span class="name">getvar</span> <span class="string">"osmode"</span>)</span><br><span class="line">cm (<span class="name">getvar</span> <span class="string">"cmdecho"</span>))</span><br><span class="line"> (<span class="name">setvar</span> <span class="string">"cmdecho"</span> <span class="number">0</span>)</span><br><span class="line"> (<span class="name">setvar</span> <span class="string">"osmode"</span> <span class="number">33</span>)</span><br><span class="line"> (<span class="name">command</span> <span class="string">"_undo"</span> <span class="string">"be"</span>)</span><br><span class="line"> (<span class="name">if</span> (<span class="name">setq</span> p1 (<span class="name">getpoint</span> <span class="string">"\n指定第一点p1:"</span>))</span><br><span class="line"> (<span class="name">if</span> (<span class="name">setq</span> p2 (<span class="name">getpoint</span> p1 <span class="string">"\n指定第二点p2:"</span>))</span><br><span class="line"> (<span class="name">progn</span></span><br><span class="line"> (<span class="name">if</span> (<span class="name">setq</span> r (<span class="name">distance</span> p1 p2 ))</span><br><span class="line"> (<span class="name">progn</span></span><br><span class="line"> (<span class="name">setvar</span> <span class="string">"osmode"</span> <span class="number">33</span>)</span><br><span class="line"> (<span class="name">command</span> <span class="string">"circle"</span> p1 r)</span><br><span class="line"> (<span class="name">command</span> <span class="string">"_hatch"</span><span class="string">"HD"</span> entlast <span class="string">"0"</span>)</span><br><span class="line"> (<span class="name">command</span> <span class="string">"_chprop"</span> (<span class="name">entlast</span>) <span class="string">""</span> <span class="string">"c"</span> <span class="number">1</span> <span class="string">""</span>))</span><br><span class="line"> ))</span><br><span class="line"> )</span><br><span class="line"> )</span><br><span class="line"> (<span class="name">command</span> <span class="string">"_undo"</span> <span class="string">"e"</span>)</span><br><span class="line"> (<span class="name">setvar</span> <span class="string">"cmdecho"</span> cm)</span><br><span class="line"> (<span class="name">setvar</span> <span class="string">"osmode"</span> os)(<span class="name">princ</span>)</span><br><span class="line"> )</span><br></pre></td></tr></table></figure><p>2.6绘制平行线程序</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">defun</span> c<span class="symbol">:hxpxx</span>()</span><br><span class="line">(<span class="name">vl-load-com</span>)  <span class="comment">;; load ActiveX support fuction</span></span><br><span class="line">(<span class="name">setq</span> MY_ModelSpace(<span class="name">vla-get-Modelspace</span> (<span class="name">vla-get-activedocument</span> (<span class="name">vlax-get-acad-object</span>)))) <span class="comment">;当下 模型控件对象-文档对象-acad</span></span><br><span class="line"><span class="comment">;;</span></span><br><span class="line">(<span class="name">setq</span> first_p (<span class="name">getpoint</span> <span class="string">"\n input a point:"</span>))</span><br><span class="line">(<span class="name">setq</span> second_p (<span class="name">getpoint</span> first_p <span class="string">"\n input the second point:"</span>))</span><br><span class="line">(<span class="name">setq</span> list_p (<span class="name">list</span> (<span class="name">car</span> first_p) (<span class="name">cadr</span> first_p) <span class="number">0.0</span></span><br><span class="line">(<span class="name">car</span> second_p) (<span class="name">cadr</span> second_p) <span class="number">0.0</span>))</span><br><span class="line"><span class="comment">;;</span></span><br><span class="line">(<span class="name">setq</span> POINTS (<span class="name">vlax-make-safearray</span> vlax-vbdouble '(<span class="number">0</span> . <span class="number">5</span>))) <span class="comment">;;安全数组，double</span></span><br><span class="line">(<span class="name">vlax-safearray-fill</span> POINTS list_p)</span><br><span class="line">(<span class="name">setq</span> PlineObject (<span class="name">vla-addpolyline</span> MY_ModelSpace POINTS)) <span class="comment">;;多段线</span></span><br><span class="line"><span class="comment">;;</span></span><br><span class="line">(<span class="name">setq</span> next_p (<span class="name">getpoint</span> second_p <span class="string">"\n input the next point(enter for end):"</span>))</span><br><span class="line">(<span class="name">while</span> next_p</span><br><span class="line">(<span class="name">progn</span></span><br><span class="line">(<span class="name">setq</span> next_p_Objext (<span class="name">vlax-3d-point</span> next_p))</span><br><span class="line">(<span class="name">vla-AppendVertex</span> PlineObject next_p_Objext) <span class="comment">;添加</span></span><br><span class="line">(<span class="name">setq</span> next_p (<span class="name">getpoint</span> next_p <span class="string">"\n input the next point(enter for end):"</span>))</span><br><span class="line">))</span><br><span class="line"><span class="comment">;;</span></span><br><span class="line"><span class="comment">;;(alert "attention: use + or - to represent width")</span></span><br><span class="line">(<span class="name">setq</span> width (<span class="name">getreal</span> <span class="string">"\n input the width of the line \n attention: use + or - to represent width :"</span>))</span><br><span class="line"><span class="comment">;;</span></span><br><span class="line">(<span class="name">initget</span> <span class="string">"Y N"</span>)  <span class="comment">;输入</span></span><br><span class="line">(<span class="name">setq</span> CurveFitting (<span class="name">getkword</span> <span class="string">"\n fit the line? Y or N &lt;N&gt;"</span>))</span><br><span class="line">(<span class="name">if</span> (<span class="name">=</span> CurveFitting <span class="string">"Y"</span>)</span><br><span class="line">(<span class="name">progn</span></span><br><span class="line">(<span class="name">setq</span> CF_Pline (<span class="name">entlast</span>))  <span class="comment">;;返回最后一个未删除的对象</span></span><br><span class="line">(<span class="name">command</span> <span class="string">"pedit"</span> CF_Pline <span class="string">"S"</span> <span class="string">""</span> <span class="string">""</span>)</span><br><span class="line">))</span><br><span class="line"><span class="comment">;;</span></span><br><span class="line">(<span class="name">setq</span> Offset_Object (<span class="name">vla-offset</span> PlineObject width))</span><br><span class="line"><span class="comment">;;(command "ofset" width CF_Pline (getponit) "")</span></span><br><span class="line">(<span class="name">vla-zoomall</span> vlax-get-acad-object)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>三点画房程序<br>按照照点号的连接顺序   设置误差阈值   点位误差距离大于精度要求   判断长边  绘制矩形</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">defun</span> c<span class="symbol">:sdhf</span>()</span><br><span class="line">  (<span class="name">setq</span> old_os (<span class="name">getvar</span> <span class="string">"osmode"</span>))                         </span><br><span class="line">  (<span class="name">setvar</span> <span class="string">"osmode"</span> <span class="number">0</span>)                                    </span><br><span class="line">  (<span class="name">setvar</span> <span class="string">"limmin"</span> '(<span class="number">0.0</span> <span class="number">0.0</span>))                            </span><br><span class="line">  (<span class="name">setvar</span> <span class="string">"limmax"</span> '(<span class="number">420.0</span> <span class="number">297.0</span>))                        </span><br><span class="line">  (<span class="name">command</span> <span class="string">"zoom"</span> <span class="string">"all"</span>)</span><br><span class="line">  (<span class="name">setq</span> first_p (<span class="name">getpoint</span> <span class="string">"\n enter a point"</span>))</span><br><span class="line">  (<span class="name">setq</span> second_p   (<span class="name">getpoint</span> first_p <span class="string">"\n enter a point"</span>))</span><br><span class="line">    (<span class="name">command</span> <span class="string">"line"</span> first_p second_p <span class="string">""</span> )</span><br><span class="line">  (<span class="name">setq</span> third_p   (<span class="name">getpoint</span> second_p <span class="string">"\n enter a point"</span>))</span><br><span class="line">  (<span class="name">setq</span> d1 (<span class="name">distance</span> first_p second_p))             </span><br><span class="line">  (<span class="name">setq</span> d2 (<span class="name">distance</span> third_p second_p))</span><br><span class="line">  (<span class="name">if</span> (<span class="name">&gt;</span> d1 d2)</span><br><span class="line">    (<span class="name">progn</span></span><br><span class="line">      (<span class="name">setq</span> cb d1)</span><br><span class="line">      (<span class="name">setq</span> db d2)</span><br><span class="line">      (<span class="name">setq</span> pt1 first_p)            <span class="comment">;将第一、第二、第三个点重新排序</span></span><br><span class="line">      (<span class="name">setq</span> pt2 second_p)</span><br><span class="line">      (<span class="name">setq</span> pt3 third_p)</span><br><span class="line">      )</span><br><span class="line">    )</span><br><span class="line">  (<span class="name">if</span> (<span class="name">&gt;</span> d2 d1)</span><br><span class="line">    (<span class="name">progn</span></span><br><span class="line">      (<span class="name">setq</span> cb d2)</span><br><span class="line">      (<span class="name">setq</span> db d1)</span><br><span class="line">      (<span class="name">setq</span> pt1 third_p)</span><br><span class="line">      (<span class="name">setq</span> pt2 second_p)</span><br><span class="line">      (<span class="name">setq</span> pt3 first_p)</span><br><span class="line">      )</span><br><span class="line">    )</span><br><span class="line">  (<span class="name">if</span> (<span class="name">=</span> d2 d1)</span><br><span class="line">    (<span class="name">progn</span></span><br><span class="line">      (<span class="name">setq</span> cb d2)</span><br><span class="line">      (<span class="name">setq</span> db d1)</span><br><span class="line">      (<span class="name">setq</span> pt1 third_p)</span><br><span class="line">      (<span class="name">setq</span> pt2 second_p)</span><br><span class="line">      (<span class="name">setq</span> pt3 first_p)</span><br><span class="line">      )</span><br><span class="line">    )</span><br><span class="line">  (<span class="name">command</span> <span class="string">"erase"</span> <span class="string">"f"</span> first_p second_p <span class="string">""</span> <span class="string">""</span>)</span><br><span class="line"> </span><br><span class="line">  (<span class="name">setq</span> xc (<span class="name">*</span> db <span class="number">0.1</span>))</span><br><span class="line">  (<span class="name">setq</span> pd (<span class="name">*</span> db <span class="number">1.4</span>))</span><br><span class="line">  (<span class="name">setq</span> j1 (<span class="name">angle</span> pt1 pt2))</span><br><span class="line">  (<span class="name">setq</span> j2 (<span class="name">+</span> j1 (<span class="name">/</span> pi <span class="number">2.0</span>)))</span><br><span class="line">  (<span class="name">setq</span> j3 (<span class="name">+</span> j2  pi ))</span><br><span class="line">  (<span class="name">setq</span> pt4 (<span class="name">polar</span> pt2 j2 db))</span><br><span class="line">  (<span class="name">setq</span> pt5 (<span class="name">polar</span> pt2 j3 db))</span><br><span class="line">  (<span class="name">setq</span> d3 (<span class="name">distance</span> pt5 pt3))</span><br><span class="line">  (<span class="name">if</span>(<span class="name">&gt;</span> d3 pd)</span><br><span class="line">    (<span class="name">progn</span></span><br><span class="line">      (<span class="name">setq</span> pt6 pt4)</span><br><span class="line">      (<span class="name">setq</span> j4 j2)</span><br><span class="line">      )</span><br><span class="line">    )</span><br><span class="line">  (<span class="name">if</span>(<span class="name">&lt;</span> d3 pd)</span><br><span class="line">    (<span class="name">progn</span></span><br><span class="line">      (<span class="name">setq</span> pt6 pt5)</span><br><span class="line">      (<span class="name">setq</span> j4 j3)</span><br><span class="line">      )</span><br><span class="line">    )</span><br><span class="line">  (<span class="name">setq</span> d4(<span class="name">distance</span> pt3 pt6))</span><br><span class="line">  (<span class="name">if</span>(<span class="name">&gt;</span> d4 xc)</span><br><span class="line">    (<span class="name">alert</span> <span class="string">"超限，请重画!"</span>))</span><br><span class="line">  (<span class="name">if</span>(<span class="name">&lt;</span> d4 xc)</span><br><span class="line">    (<span class="name">progn</span></span><br><span class="line">      (<span class="name">setq</span> pt7 (<span class="name">polar</span> pt1 j4 db ))</span><br><span class="line">         (<span class="name">command</span> <span class="string">"line"</span> pt1 pt2 <span class="string">""</span>)</span><br><span class="line">         (<span class="name">command</span> <span class="string">"line"</span> pt6 pt7 <span class="string">""</span>)</span><br><span class="line">         (<span class="name">command</span> <span class="string">"line"</span> pt2 pt6 <span class="string">""</span>)</span><br><span class="line">         (<span class="name">command</span> <span class="string">"line"</span> pt1 pt7 <span class="string">""</span>)</span><br><span class="line">      )</span><br><span class="line">)</span><br><span class="line">)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;基础知识&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#基础知识&quot;&gt;&lt;/a&gt; &lt;em&gt;基础知识&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;形文件的编写&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;形文件的格式: 最后一行一回车结束；形编号取值1-1
      
    
    </summary>
    
      <category term="数字测图" scheme="http://yoursite.com/categories/%E6%95%B0%E5%AD%97%E6%B5%8B%E5%9B%BE/"/>
    
    
      <category term="CAD二次开发" scheme="http://yoursite.com/tags/CAD%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
      <category term="Visual Lisp" scheme="http://yoursite.com/tags/Visual-Lisp/"/>
    
  </entry>
  
  <entry>
    <title>右键菜单中添加 Open With Code 选项</title>
    <link href="http://yoursite.com/2019/08/18/%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E4%B8%AD%E6%B7%BB%E5%8A%A0-Open-With-Code-%E9%80%89%E9%A1%B9/"/>
    <id>http://yoursite.com/2019/08/18/右键菜单中添加-Open-With-Code-选项/</id>
    <published>2019-08-18T13:35:31.000Z</published>
    <updated>2019-08-18T13:42:31.807Z</updated>
    
    <content type="html"><![CDATA[<p>右键直接打开文件是一个非常方便的功能，然而在初次配置的时候错过了，只能利用<br>注册表文件强行重新修改一波，还好所需要改动的东西不多，照着模板套用一下绝对路径就可以了。新建一个注册表文件<strong>vsCodeOpenFolder.reg</strong>,然后点进去运行一下就可以了 文件具体内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\VSCode]</span><br><span class="line">@=&quot;Open with Code&quot;</span><br><span class="line">&quot;Icon&quot;=&quot;C:\\Users\\sheld\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\VSCode\command]</span><br><span class="line">@=&quot;\&quot;C:\\Users\\sheld\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe\&quot; \&quot;%1\&quot;&quot;</span><br><span class="line">    </span><br><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\shell\VSCode]</span><br><span class="line">@=&quot;Open with Code&quot;</span><br><span class="line">&quot;Icon&quot;=&quot;C:\\Users\\sheld\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\shell\VSCode\command]</span><br><span class="line">@=&quot;\&quot;C:\\Users\\sheld\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe\&quot; \&quot;%V\&quot;&quot;</span><br><span class="line"></span><br><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\VSCode]</span><br><span class="line">@=&quot;Open with Code&quot;</span><br><span class="line">&quot;Icon&quot;=&quot;C:\\Users\\sheld\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\VSCode\command]</span><br><span class="line">@=&quot;\&quot;C:\\Users\\sheld\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe\&quot; \&quot;%V\&quot;&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;右键直接打开文件是一个非常方便的功能，然而在初次配置的时候错过了，只能利用&lt;br&gt;
注册表文件强行重新修改一波，还好所需要改动的东西不多，照着模板套用一下绝对路径就可以了。新建一个注册表文件&lt;strong&gt;vsCodeOpenFolder.reg&lt;/strong&gt;,然后点进
      
    
    </summary>
    
      <category term="软件配置" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="vscode" scheme="http://yoursite.com/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>Python Projext: Reload</title>
    <link href="http://yoursite.com/2019/07/26/Python-Projext-Reload/"/>
    <id>http://yoursite.com/2019/07/26/Python-Projext-Reload/</id>
    <published>2019-07-26T12:56:03.000Z</published>
    <updated>2019-08-03T12:11:27.870Z</updated>
    
    <content type="html"><![CDATA[<p>两个计划：</p><ul><li>Windows从源代码编译安装tensorflow-gpu 和 pytorch</li><li>利用wsl安装linux环境的tensorflow-cpu</li></ul><p>win10 python3.7.4环境配置</p><blockquote><p>ps: powershell cd 到的文件夹有空格或者是中文的时候需要用双引号括起来</p></blockquote><p>修改pip下载源到清华源 <a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><p>windows下，直接在user目录中创建一个pip目录，如：C:\Users\xx\pip，新建文件pip.ini</p><p>将文件夹权限设置为完全控制，否则vscode没有权限配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">[install]</span><br><span class="line">trusted-host=mirrors.aliyun.com</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS C:\WINDOWS\system32&gt; <span class="built_in">cd</span> C:\\<span class="string">"Program Files"</span>\Python37\Scripts\</span><br><span class="line">PS C:\Program Files\Python37\Scripts&gt; python -m pip install --upgrade pip <span class="comment"># 更新pip</span></span><br></pre></td></tr></table></figure><p>在网页上找到下载对应的代码https://pytorch.org/</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip3 install https://download.pytorch.org/whl/cu100/torch-1.1.0-cp37-cp37m-win_amd64.whl</span><br><span class="line">pip3 install https://download.pytorch.org/whl/cu100/torchvision-0.3.0-cp37-cp37m-win_amd64.whl</span><br></pre></td></tr></table></figure><p>配置vscode</p><p>python.linting的配置（PEP8）</p><p>所有的变量名字都要大写，一些空格问题可以alt + shift + F 使用ypaf格式化</p><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">jewel@Antrovirens:~$ screenfetch</span><br><span class="line">         _,met$$$$<span class="variable">$gg</span>.           jewel@Antrovirens</span><br><span class="line">      ,g$$$$$$$$$$$$$$<span class="variable">$P</span>.        OS: Debian</span><br><span class="line">    ,g$<span class="variable">$P</span><span class="string">""</span>       <span class="string">""</span><span class="string">"Y$$."</span>.      Kernel: x86_64 Linux 4.4.0-17134-Microsoft</span><br><span class="line">   ,$<span class="variable">$P</span><span class="string">'              `$$$.      Uptime: 5h 1m</span></span><br><span class="line"><span class="string">  '</span>,$<span class="variable">$P</span>       ,ggs.     `$<span class="variable">$b</span>:    Packages: 275</span><br><span class="line">  `d$$<span class="string">'     ,$P"'</span>   .    $$$     Shell: bash l -i</span><br><span class="line">   $<span class="variable">$P</span>      d$<span class="string">'     ,    $$P     CPU: Intel Core i5-8250U CPU @ 1.8GHz</span></span><br><span class="line"><span class="string">   $$:      $$.   -    ,d$$'</span>     RAM: 4959MiB / 8089MiB</span><br><span class="line">   $$\;      Y<span class="variable">$b</span>._   _,d<span class="variable">$P</span><span class="string">'</span></span><br><span class="line"><span class="string">   Y$$.    `.`"Y$$$$P"'</span></span><br><span class="line">   `$<span class="variable">$b</span>      <span class="string">"-.__</span></span><br><span class="line"><span class="string">    `Y$$</span></span><br><span class="line"><span class="string">     `Y$$.</span></span><br><span class="line"><span class="string">       `$<span class="variable">$b</span>.</span></span><br><span class="line"><span class="string">         `Y$<span class="variable">$b</span>.</span></span><br><span class="line"><span class="string">            `"</span>Y<span class="variable">$b</span>._</span><br><span class="line">                `<span class="string">""</span><span class="string">""</span></span><br></pre></td></tr></table></figure><p>接下来是wsl的配置</p><p>首先打开设置中的启用linux subsystem</p><p>然后在应用商店下载所需要的版本</p><p>查看版本号：</p><p>cat /etc/debian_version   9.7  对应名称 stretch</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">jewel@Antrovirens:~$ uname -a</span><br><span class="line"><span class="string">'Linux Antrovirens 4.4.0-17134-Microsoft #706-Microsoft Mon Apr 01 18:13:00 PST 2019 x86_64 GNU/Linux'</span></span><br><span class="line">jewel@Antrovirens:~$ cat /proc/version</span><br><span class="line"><span class="string">'Linux version 4.4.0-17134-Microsoft (Microsoft@Microsoft.com) (gcc version 5.4.0 (GCC) ) #706-Microsoft Mon Apr 01 18:13:00 PST 2019'</span></span><br><span class="line">jewel@Antrovirens:~$ cat /etc/issue</span><br><span class="line"><span class="string">'Debian GNU/Linux 9 \n \l'</span></span><br></pre></td></tr></table></figure><p>修改apt下载源<br>cp /etc/apt/sources.list /etc/apt/sources.list.bak<br>vi /etc/apt/sources.list</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.163.com/debian/ stretch main non-free contrib</span><br><span class="line">deb http://mirrors.163.com/debian/ stretch-updates main non-free contrib</span><br><span class="line">deb http://mirrors.163.com/debian/ stretch-backports main non-free contrib</span><br><span class="line">deb-src http://mirrors.163.com/debian/ stretch main non-free contrib</span><br><span class="line">deb-src http://mirrors.163.com/debian/ stretch-updates main non-free contrib</span><br><span class="line">deb-src http://mirrors.163.com/debian/ stretch-backports main non-free contrib</span><br><span class="line">deb http://mirrors.163.com/debian-security/ stretch/updates main non-free contrib</span><br><span class="line">deb-src http://mirrors.163.com/debian-security/ stretch/updates main non-free contrib</span><br></pre></td></tr></table></figure><p>更新  upgrade update</p><p>安装各种包</p><p>sudo apt install -y python3<br>sudo apt install -y python3-pip</p><p>修改pip下载源</p><p>sudo pip3 install -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a> opencv-python</p><p>开始pip依赖包</p><p>安装虚拟环境</p><p>配置环境</p><p>安装tf-cpu</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;两个计划：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows从源代码编译安装tensorflow-gpu 和 pytorch&lt;/li&gt;
&lt;li&gt;利用wsl安装linux环境的tensorflow-cpu&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;win10 python3.7.4环境配置&lt;/p&gt;
      
    
    </summary>
    
      <category term="环境配置" scheme="http://yoursite.com/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>神经网络从经典到卷积</title>
    <link href="http://yoursite.com/2019/07/21/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BB%8E%E7%BB%8F%E5%85%B8%E5%88%B0%E5%8D%B7%E7%A7%AF/"/>
    <id>http://yoursite.com/2019/07/21/神经网络从经典到卷积/</id>
    <published>2019-07-21T06:48:14.000Z</published>
    <updated>2019-07-25T08:00:03.153Z</updated>
    
    <content type="html"><![CDATA[<div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/cover.jpg" alt="卷积神经网络"></div><p>神经网络是一种模拟人脑神经结构的计算机程序结构，以期能够实现人工智能的机器学习技术。本文将介绍神经网络背后的概念，并介绍如何通过编程实现神经网络。</p><h2 id="神经网络基础"><a class="markdownIt-Anchor" href="#神经网络基础"></a> 神经网络基础</h2><p>机器可以迅速做出大量的算术运算，但是无法处理图像中包含的大量信息。我们怀疑图像识别需要特别的人类智能， 而这是机器所缺乏的，人工智能所讨论的问题正是如此。</p><h3 id="简单的学习器"><a class="markdownIt-Anchor" href="#简单的学习器"></a> 简单的学习器</h3><p>一台基本的机器的工作流程，如下图所示，接受了一个问题并作出相应的思考，得到一个输出结果。</p><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/simple%20learning%20mechane.jpg" alt="简单的学习器" width="300" height="100"></div><p>所有有用的计算机系统都应该有一个输入和输出，并在输入和输出之间进行某种类型的计算。我们不能精确知道一些事务如何运行，但我们可以通过模型来估计其运作方式。改进这些模型的方法是通过输出值和真实值之间的比较得到偏移值，进一步调整参数。</p><p>以一个简单的分类器为例子，有二维坐标内有两个点系，聚集在两片区域，先要用一条直线将这两类特征分开，即为通过判断在直线的那一端来对这两类进行分类。</p><p>我们设计一条经过原点的直线 y = A * x 作为我们分类的依据。这条直线应该基于具体的坐标数值特征将两组点分割开来。</p><p>为简化工作，将实例简化为以下的表格。</p><table><thead><tr><th style="text-align:center">实例</th><th style="text-align:center">x坐标</th><th style="text-align:center">y坐标</th><th style="text-align:center">类别</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">3.0</td><td style="text-align:center">1.0</td><td style="text-align:center">A</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">1.0</td><td style="text-align:center">3.0</td><td style="text-align:center">B</td></tr></tbody></table><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/Figure_1.png" alt="线性分类器"></div><p>参数A控制着直线的斜率，我们给A赋予一个初值0.25，取x = 3.0, y = 0.75，我们所期望的直线应该经过A类别的上方，比如是1.1的目标值，我们可以利用这个误差来调整A值：</p><blockquote><p>误差值 = 期望目标值 - 实际输出值<br>E = 1.1 - 0.75 = 0.35</p></blockquote><p>分类器的线性函数应该修改为 t = (A + dA) * x</p><blockquote><p>E = t - y = (A + dA) * x - A * x = dA * x<br>dA = E / x = 0.35 / 3 = 0.1167</p></blockquote><p>这样A的新值化为A + dA =0.3667。 接下来可以接着输入B类的样本，使得A值进一步趋向于使直线略微低于B类点群的下方。但是这样的分类方法最终改进的直线不会顾及开始的训练值，而是仅仅考虑了最近的一组数据，这不是我们想要的结果。</p><p>机器学习中，我们应该进行适度改进（moderate），不应该改进过于激烈，当训练数据本身不能确定为完全正确，包含现实误差和噪声的时候，可以抑制这些影响因素。<br>在改进的公式中引入一个调节系数L，也是所谓的学习率（learning rate）</p><blockquote><p>dA = L * (E / x)</p></blockquote><p>选取L = 0.5 作为一个合理的系数，意味着我们只会更新值的一半。</p><p>一个简单的py实现样例代码如下。需要手工用文本写一个输入数据的文件classification cal sample.txt</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">datas = []  <span class="comment">#初始化</span></span><br><span class="line">file_object = open(<span class="string">'classification cal sample.txt'</span>,<span class="string">'r'</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> file_object:</span><br><span class="line">        <span class="comment"># do_somthing_with(line) #line带"\n"</span></span><br><span class="line">        line = line.replace(<span class="string">','</span>,<span class="string">' '</span>).replace(<span class="string">'\n'</span>,<span class="string">''</span>)  <span class="comment">#去除无用字符</span></span><br><span class="line">        num = list(map(float,line.split()))  <span class="comment"># 把空白行分离开，映射到表结构 参见python自带函数map() </span></span><br><span class="line">        datas.append(num) <span class="comment">#后续拓展表</span></span><br><span class="line">        <span class="comment">#print(datas)</span></span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">     file_object.close() <span class="comment">#文件流关闭</span></span><br><span class="line"></span><br><span class="line">plt.figure(num = <span class="number">2019</span>, figsize = (<span class="number">5</span>, <span class="number">5</span>)) <span class="comment">#初始化图形，指定figure的编号并指定figure的大小</span></span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> datas:</span><br><span class="line">    a = data[<span class="number">0</span>] <span class="comment"># xi</span></span><br><span class="line">    b = data[<span class="number">1</span>] <span class="comment"># yi</span></span><br><span class="line">    k = b / a</span><br><span class="line">    x = np.linspace(<span class="number">0</span>, a, int(<span class="number">50</span> * a))</span><br><span class="line">    y = k * x</span><br><span class="line">    plt.plot(x,y,color = <span class="string">'black'</span>, linewidth = <span class="number">1.0</span>, linestyle = <span class="string">'--'</span>) <span class="comment">#定义线性</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># y = A * x    E = dA * x     dA= L * (E / x)</span></span><br><span class="line">A = <span class="number">0.1</span></span><br><span class="line">L = <span class="number">0.5</span> <span class="comment">#预设的初始值</span></span><br><span class="line"><span class="comment"># 进行简单的拟合  一个可循环的过程</span></span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> datas:</span><br><span class="line">    E = data[<span class="number">1</span>] - A * data[<span class="number">0</span>] + data[<span class="number">1</span>] / <span class="number">10</span></span><br><span class="line">    dA = L * (E / data[<span class="number">0</span>])</span><br><span class="line">    A = A + dA</span><br><span class="line">    </span><br><span class="line">x = np.linspace(<span class="number">0</span>, <span class="number">5</span>, <span class="number">250</span>) <span class="comment">#绘制图形</span></span><br><span class="line">y = A * x</span><br><span class="line">plt.plot(x,y,color = <span class="string">'green'</span>, linewidth = <span class="number">1.0</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>有时候一个分类器不足以解决问题，如果数据本身不是单一线性过程支配，那么一个简单的线性分类器不能对数据进行划分。例如逻辑上的异或问题（如下方图）。这样的问题需要多个线性分类器来共同解决</p><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/Figure_2.png" alt="多个线性分类器解决异或问题"></div><h3 id="神经元"><a class="markdownIt-Anchor" href="#神经元"></a> 神经元</h3><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/neuron.jpg" alt="神经元"></div><p>大脑神经的基本单元是神经元，虽然神经元有着多种形式，神经元都会将电信号从一段传递到另一端，沿着突触，将电信号从树突传递到树突。神经元主要结构可以分为树突和终端。一个神经元接受了电信号，当接受信号超过一定阈值（threshold），神经元被激发后链接电路，产生一个输出信号。</p><p>思考我们如何建模人工神经。生物神经元可以接受很多输出，我们需要将他们加权相加得到总输入，通过内在的阈值函数计算得到输出结果，可以提供信号给更多的神经元。将这种结构复制到人造模型的一种方法是构造多层神经元，如图所示</p><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/neural%20networks1.jpg" alt="neural networks"></div><p>每一层的节点都与所有下一层的节点通过一定的权重直接相连，通过调整节点之间的连接强度或阈值函数的形状来进行节点之间的强度调节</p><p>了解了处理结构之后，激活函数引入给我们的模型带入了非线性元素，可以处理更为复杂的问题，实际中较为常用的激活函数主要有三种，Sigmoid, tanh, 和ReLU</p><h4 id="sigmoid"><a class="markdownIt-Anchor" href="#sigmoid"></a> Sigmoid</h4><p>（这里是因为我的Katex公式渲染还有一点问题，还得待调试，下面把python的计算代码贴上来）</p><blockquote><p>y = 1 / (1 + np.exp(-x))</p></blockquote><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/Sigmoid%20Function.png" alt="Sigmoid Fuction"></div><p>Sigmoid函数经过激活之后的输出区间为（0，1），输入的数据越大，输出越接近1，否则越接近0。sigmoid函数与生物神经网络的工作机制很类似，在一开始作为激活函数时广泛收到大众认可，但他的缺点也非常明显，他的最大问题在于会导致模型的梯度消失，函数的导数取值区间为0~0.25，在后向传播时，每逆向经过一个节点就要乘以一个sigmoid的导数值，当模型层次达到一定程度时，会导致梯度值越来越小，直到消失。</p><h4 id="tanh"><a class="markdownIt-Anchor" href="#tanh"></a> tanh</h4><blockquote><p>y1 = (np.exp(x) - np.exp(-x)) / (np.exp(x) + np.exp(-x))</p></blockquote><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/Tanh%20Function.png" alt="tanh"></div><p>tanh函数的输出结果是中心对称的，解决了激活函数在模型优化中收敛速度变慢的问题，然鹅求导的取值区域为0~1，仍然不够大</p><h4 id="relu"><a class="markdownIt-Anchor" href="#relu"></a> ReLU</h4><blockquote><p>f(x)= max(0,x)</p></blockquote><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/ReLU%20Function.png" alt="ReLU"></div><p>ReLU修正线性单元 是现在在深度学习神经网络模型中使用率最高的激活函数，使用它在实际计算中非常高效，收敛速度非常快，但是函数特性可能会导致有一些神经元永远不会被激活，并且这些神经元参数不能被更新。这一般是由于模型参数在初始化的时候采用了全正或者全负的值，或者在后向传播中设置的学习率过高导致的。解决方法有对模型参数使用更高级的初始化方法，比如Xavier，以及合理的后向传播速率，推荐使用自适应的算法比如Adam</p><h3 id="追踪信号"><a class="markdownIt-Anchor" href="#追踪信号"></a> 追踪信号</h3><p>可以用矩阵的陈发表示所有的运算</p><blockquote><p><em>X = W * I</em></p></blockquote><p>W为权重矩阵，以第二层为视界，每一行为第一层的各个节点连接到第二层的某节点的权重序列;I矩阵为输入矩阵，X为组合调节之后的信号</p><blockquote><p><em>O = function(X)</em></p></blockquote><p>O表示着经过激活函数处理后的该层的所有输出</p><p>以一个结构为3x3的，有input、hidden、output层组成的神经网络作为算例，一次结果的输出过程如下：</p><blockquote><p>I : input_data<br><em>X<sub>hidden</sub> = W<sub>input_hidden</sub> · I</em><br><em>O<sub>hidden</sub> = sigmoid(X<sub>hidden</sub>)</em><br><em>X<sub>output</sub> = W<sub>hidden_output</sub> · O<sub>hidden</sub></em><br><em>O<sub>output</sub> = X<sub>output</sub></em></p></blockquote><h3 id="后向传播"><a class="markdownIt-Anchor" href="#后向传播"></a> 后向传播</h3><h3 id="更新权重"><a class="markdownIt-Anchor" href="#更新权重"></a> 更新权重</h3><h2 id="python神经网络编程"><a class="markdownIt-Anchor" href="#python神经网络编程"></a> python神经网络编程</h2><p>py搭建简单的三层神经网络</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> scipy.special</span><br><span class="line"><span class="comment">#定义三层神经网络</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">neuralNetwork</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, inputnodes, hiddennodes, outputnodes, learningrate)</span>:</span></span><br><span class="line">        self.inodes = inputnodes <span class="comment">#输入层</span></span><br><span class="line">        self.hnodes = hiddennodes <span class="comment">#隐藏层</span></span><br><span class="line">        self.onodes = outputnodes <span class="comment">#输出层</span></span><br><span class="line">        self.lr = learningrate</span><br><span class="line">        <span class="comment">#较为复杂的权重   中心值为0 标准差为传入节点数开方的倒数(-0.5次方) 的正态分布 </span></span><br><span class="line">        self.wih = np.random.normal(<span class="number">0.0</span>, pow(self.hnodes, <span class="number">-0.5</span>), (self.hnodes, self.inodes))  <span class="comment">#100 278</span></span><br><span class="line">        self.who = np.random.normal(<span class="number">0.0</span>, pow(self.onodes, <span class="number">-0.5</span>), (self.onodes, self.hnodes))  <span class="comment">#10 100</span></span><br><span class="line"></span><br><span class="line">        self.activation_function = <span class="keyword">lambda</span> x: scipy.special.expit(x)</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">train</span><span class="params">(self, inputs_list, targets_list)</span>:</span></span><br><span class="line"></span><br><span class="line">        inputs = np.array(inputs_list, ndmin = <span class="number">2</span>).T  <span class="comment">#278*1</span></span><br><span class="line">        targets = np.array(targets_list, ndmin = <span class="number">2</span>).T <span class="comment"># 10*1</span></span><br><span class="line">        </span><br><span class="line">        hidden_inputs = np.dot(self.wih, inputs) <span class="comment">#100 1</span></span><br><span class="line">        </span><br><span class="line">        hidden_outputs = self.activation_function(hidden_inputs) <span class="comment">#100 1</span></span><br><span class="line"></span><br><span class="line">        final_inputs = np.dot(self.who, hidden_outputs) <span class="comment">#10 1</span></span><br><span class="line"></span><br><span class="line">        final_outputs = self.activation_function(final_inputs)  <span class="comment"># 10 1</span></span><br><span class="line"></span><br><span class="line">        output_errors = targets - final_outputs <span class="comment"># 10 1</span></span><br><span class="line"></span><br><span class="line">        hidden_errors = np.dot(self.who.T , output_errors) <span class="comment"># 100 1</span></span><br><span class="line">        <span class="comment">#更新层之间的权重 dWij = alpha * Ek * S(Ok) * (1 - S(Ok)) * Oj.T</span></span><br><span class="line">        self.who += self.lr * np.dot((output_errors * final_outputs * (<span class="number">1.0</span> - final_outputs)), np.transpose(hidden_outputs))</span><br><span class="line">        self.wih += self.lr * np.dot((hidden_errors * hidden_outputs * (<span class="number">1.0</span> - hidden_outputs)), np.transpose(inputs))</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">query</span><span class="params">(self, inputs_list)</span>:</span></span><br><span class="line"></span><br><span class="line">        inputs = np.array(inputs_list, ndmin = <span class="number">2</span>).T   </span><br><span class="line">        hidden_inputs = np.dot(self.wih, inputs)</span><br><span class="line">        hidden_outputs = self.activation_function(hidden_inputs)</span><br><span class="line">        final_inputs = np.dot(self.who, hidden_outputs)</span><br><span class="line">        final_outputs = self.activation_function(final_inputs)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> final_outputs</span><br><span class="line"></span><br><span class="line"><span class="comment">#set number</span></span><br><span class="line">input_nodes = <span class="number">784</span></span><br><span class="line">hidden_nodes = <span class="number">100</span></span><br><span class="line">output_nodes = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">learning_rate = <span class="number">0.3</span></span><br><span class="line"><span class="comment">#create instance of neural network</span></span><br><span class="line">n = neuralNetwork(input_nodes, hidden_nodes, output_nodes, learning_rate)</span><br><span class="line"></span><br><span class="line"><span class="comment">#train the neural network</span></span><br><span class="line">training_data_file = open(<span class="string">"mnist_train.csv"</span>,<span class="string">'r'</span>)</span><br><span class="line">training_data_list = training_data_file.readlines()</span><br><span class="line">training_data_file.close()</span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> record <span class="keyword">in</span> training_data_list:</span><br><span class="line">    all_values = record.split(<span class="string">','</span>)</span><br><span class="line">    inputs = (np.asfarray(all_values[<span class="number">1</span>:]) / <span class="number">255.0</span> * <span class="number">0.99</span>) + <span class="number">0.01</span></span><br><span class="line">    <span class="comment">#print('正在训练第' + str(i) + '个')</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    targets = np.zeros(output_nodes) + <span class="number">0.01</span></span><br><span class="line">    targets[int(all_values[<span class="number">0</span>])] = <span class="number">0.99</span>   <span class="comment">#1*10</span></span><br><span class="line">    n.train(inputs, targets)</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="comment">#print('训练结束\n')</span></span><br><span class="line"><span class="comment">#test the network</span></span><br><span class="line"></span><br><span class="line">test_data_file = open(<span class="string">"mnist_test.csv"</span>,<span class="string">'r'</span>)</span><br><span class="line">test_data_list = test_data_file.readlines()</span><br><span class="line">test_data_file.close()</span><br><span class="line">score = <span class="number">0</span></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> record <span class="keyword">in</span> test_data_list:</span><br><span class="line">    all_values = record.split(<span class="string">','</span>)</span><br><span class="line"><span class="comment">##    image_aarray = np.asfarray(all_values[1:]).reshape((28,28))</span></span><br><span class="line"><span class="comment">##    plt.imshow(image_aarray, cmap = 'Greys', interpolation = 'None')</span></span><br><span class="line"><span class="comment">##    plt.show()</span></span><br><span class="line">    correct_label = int(all_values[<span class="number">0</span>])</span><br><span class="line">    outputs = n.query((np.asfarray(all_values[<span class="number">1</span>:]) / <span class="number">255.0</span> * <span class="number">0.99</span>) + <span class="number">0.01</span>)</span><br><span class="line">    label = np.argmax(outputs)</span><br><span class="line">    <span class="comment">#print('correct:' + str(correct_label) +' result:' + str(label))</span></span><br><span class="line">    <span class="comment">#下面是随便写的  凑合着看看</span></span><br><span class="line">    <span class="keyword">if</span> label == correct_label:</span><br><span class="line">        score += <span class="number">1</span></span><br><span class="line">        num +=<span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        num += <span class="number">1</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">print(<span class="string">'score:'</span>+ str(score))</span><br><span class="line">print(<span class="string">'num:'</span> + str(num))</span><br><span class="line">print(<span class="string">'rate:'</span> + str(score/num))</span><br></pre></td></tr></table></figure><h2 id="深度学习框架下的神经网络编程"><a class="markdownIt-Anchor" href="#深度学习框架下的神经网络编程"></a> 深度学习框架下的神经网络编程</h2><h3 id="pytorch"><a class="markdownIt-Anchor" href="#pytorch"></a> pytorch</h3><h4 id="pytorch环境配置"><a class="markdownIt-Anchor" href="#pytorch环境配置"></a> Pytorch环境配置</h4><h5 id="env_torch配置"><a class="markdownIt-Anchor" href="#env_torch配置"></a> env_torch配置</h5><p>如果要安装可以在GPU上运行的版本，需要电脑配有NVDIA显卡，并且提前安装CUDA比较先进的版本<br>在anaconda的监视器界面中，新建一个包含适合pytorch工程的新环境，命名为env_tf，直接选择复制了tensorflow的环境然后把tf卸载掉<br>由于conda指令下载缓慢，选择pip下载，在环境prompt中分别输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pip install https://download.pytorch.org/whl/cu100/torch-1.1.0-cp37-cp37m-win_amd64.whl</span><br><span class="line">pip install https://download.pytorch.org/whl/cu100/torchvision-0.3.0-cp37-cp37m-win_amd64.whl</span><br><span class="line">```   </span><br><span class="line">由于conda下载速度缓慢，建议使用加速器</span><br><span class="line"><span class="comment">##### jupyter notebook</span></span><br><span class="line">该IDE环境使用较多，可在env_torch内通过下方指令安装，建议连加速器</span><br><span class="line">```bash</span><br><span class="line">conda install jupyter</span><br></pre></td></tr></table></figure><h3 id="tensorflow"><a class="markdownIt-Anchor" href="#tensorflow"></a> tensorflow</h3><h2 id="卷积神经网络"><a class="markdownIt-Anchor" href="#卷积神经网络"></a> 卷积神经网络</h2><h3 id="卷积神经网络实战"><a class="markdownIt-Anchor" href="#卷积神经网络实战"></a> 卷积神经网络实战</h3><p>以简单的mnist手写字符训练集为例子</p><p>tensorflow实现的简单卷积神经网络</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> tensorflow.examples.tutorials.mnist <span class="keyword">import</span> input_data</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line"><span class="comment">#加载原始数据</span></span><br><span class="line">mnist = input_data.read_data_sets(<span class="string">'C:/User/sheld/Desktop/data/'</span>, one_hot = <span class="literal">True</span>)</span><br><span class="line">sess = tf.InteractiveSession()</span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化权重和偏值函数  并加入噪声</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">weight_variable</span><span class="params">(shape)</span>:</span></span><br><span class="line">    initial = tf.truncated_normal(shape, stddev = <span class="number">0.1</span>)  <span class="comment">#正态分布  噪声标准差设为0.1</span></span><br><span class="line">    <span class="keyword">return</span> tf.Variable(initial) </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bias_variable</span><span class="params">(shape)</span>:</span></span><br><span class="line">    initial = tf.constant(<span class="number">0.1</span>, shape = shape) <span class="comment">#正值 0.1    return tf.Variable(initial)</span></span><br><span class="line">    <span class="keyword">return</span> tf.Variable(initial)</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义卷积层</span></span><br><span class="line"><span class="comment">#x：输入</span></span><br><span class="line"><span class="comment">#W：卷积参数 [a, b, c, d] a b 表示卷积核尺寸，c表示通道数， d表示卷积核数</span></span><br><span class="line"><span class="comment">#strides 步长</span></span><br><span class="line"><span class="comment">#padding 边界处理方式  same:输入和输出保持同样的尺寸</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">conv2d</span><span class="params">(x, W)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> tf.nn.conv2d(x, W, strides = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>], padding = <span class="string">'SAME'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义池化层</span></span><br><span class="line"><span class="comment">#2x2最大化池 缩小像素  把横竖步长设为2</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">max_pool_2x2</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> tf.nn.max_pool(x, ksize = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>], strides = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>],</span><br><span class="line">                          padding = <span class="string">'SAME'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#转化成2d结构  x是输入  y_是真实label</span></span><br><span class="line">x = tf.placeholder(tf.float32, [<span class="literal">None</span>, <span class="number">784</span>]) <span class="comment">#输入的数据占位符</span></span><br><span class="line">y_ = tf.placeholder(tf.float32, [<span class="literal">None</span>, <span class="number">10</span>]) <span class="comment">#输入的标签占位符</span></span><br><span class="line">x_image = tf.reshape(x, [<span class="number">-1</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#卷积层1</span></span><br><span class="line">W_conv1 = weight_variable([<span class="number">5</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">32</span>])</span><br><span class="line">b_conv1 = bias_variable([<span class="number">32</span>])</span><br><span class="line">h_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)</span><br><span class="line">h_pool1 = max_pool_2x2(h_conv1)</span><br><span class="line"></span><br><span class="line"><span class="comment">#卷积层2</span></span><br><span class="line">W_conv2 = weight_variable([<span class="number">5</span>,<span class="number">5</span>,<span class="number">32</span>,<span class="number">64</span>])</span><br><span class="line">b_conv2 = bias_variable([<span class="number">64</span>])</span><br><span class="line">h_conv2 = tf.nn.relu(conv2d(h_pool1, W_conv2) + b_conv2)</span><br><span class="line">h_pool2 = max_pool_2x2(h_conv2)</span><br><span class="line"></span><br><span class="line"><span class="comment">#全连接层</span></span><br><span class="line">W_fc1 = weight_variable([<span class="number">7</span> * <span class="number">7</span> * <span class="number">64</span>, <span class="number">1024</span>])</span><br><span class="line">b_fc1 = bias_variable([<span class="number">1024</span>])</span><br><span class="line">h_pool2_flat = tf.reshape(h_pool2, [<span class="number">-1</span>, <span class="number">7</span>*<span class="number">7</span>*<span class="number">64</span>])</span><br><span class="line">h_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1) + b_fc1)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Dropout层</span></span><br><span class="line">keep_prob = tf.placeholder(tf.float32)</span><br><span class="line">h_fc1_drop = tf.nn.dropout(h_fc1, keep_prob)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Softmax层</span></span><br><span class="line">W_fc2 = weight_variable([<span class="number">1024</span>, <span class="number">10</span>])</span><br><span class="line">b_fc2 = bias_variable([<span class="number">10</span>])</span><br><span class="line">y_conv = tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2)</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义损失函数  应用Adam优化器</span></span><br><span class="line">cross_entropy = tf.reduce_mean(-tf.reduce_sum(y_ * tf.log(y_conv),</span><br><span class="line">                                              reduction_indices = [<span class="number">1</span>])) <span class="comment">#交叉熵</span></span><br><span class="line">train_step = tf.train.AdamOptimizer(<span class="number">1e-4</span>).minimize(cross_entropy) <span class="comment">#梯度下降法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#评定精准率</span></span><br><span class="line">correct_prediction = tf.equal(tf.argmax(y_conv, <span class="number">1</span>), tf.argmax(y_, <span class="number">1</span>))  <span class="comment">#精确度计算</span></span><br><span class="line">accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))</span><br><span class="line"></span><br><span class="line"><span class="comment">#开始训练</span></span><br><span class="line">tf.global_variables_initializer().run()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">20000</span>):</span><br><span class="line">    batch = mnist.train.next_batch(<span class="number">50</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="number">1</span> % <span class="number">100</span> ==<span class="number">0</span>:</span><br><span class="line">        train_accuracy = accuracy.eval(</span><br><span class="line">            feed_dict = &#123;x:batch[<span class="number">0</span>], y_:batch[<span class="number">1</span>], keep_prob: <span class="number">1.0</span>&#125;)</span><br><span class="line">        print(<span class="string">'step %d, training accuracy %g'</span>%(i,train_accuracy))</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    train_step.run(feed_dict = &#123;x:batch[<span class="number">0</span>], y_:batch[<span class="number">1</span>], keep_prob: <span class="number">0.5</span>&#125;)</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">print(<span class="string">'test accuracy %g'</span> % accuracy.eval(</span><br><span class="line">    feed_dict = &#123;x:mnist.test.images, y_:mnist.test.labels, keep_prob: <span class="number">1.0</span>&#125;))</span><br></pre></td></tr></table></figure><p>pytorch实现的版本</p><pre class="highlight"><code class="python"></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/cover.jpg&quot; alt=&quot;卷积神经网络&quot;&gt;
&lt;/div&gt;
&lt;p&gt;
      
    
    </summary>
    
      <category term="深度学习" scheme="http://yoursite.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="卷积神经网络" scheme="http://yoursite.com/tags/%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
      <category term="神经网络" scheme="http://yoursite.com/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>About Me</title>
    <link href="http://yoursite.com/2019/07/14/About-Me/"/>
    <id>http://yoursite.com/2019/07/14/About-Me/</id>
    <published>2019-07-14T15:10:28.000Z</published>
    <updated>2019-07-15T14:10:40.166Z</updated>
    
    <content type="html"><![CDATA[<h2 id="i-am-just-an-ordinary-one"><a class="markdownIt-Anchor" href="#i-am-just-an-ordinary-one"></a> I am just an ordinary one</h2><p><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/cover2.jpg" alt="tecent cos1" title="爱丽丝"></p><p><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/cloud/%E7%88%B1%E4%B8%BD%E4%B8%9D2.jpg" alt="tecent cos2" title="爱丽丝2"></p><p><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/cloud/%E9%AD%94%E7%90%86%E6%B2%99.jpg" alt="tecent cos3" title="魔理沙"></p><div style="align: center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/cloud/%E7%88%B1%E4%B8%BD%E4%B8%9D2.jpg"></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;i-am-just-an-ordinary-one&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#i-am-just-an-ordinary-one&quot;&gt;&lt;/a&gt; I am just an ordinary one&lt;/h2&gt;
&lt;p&gt;&lt;im
      
    
    </summary>
    
      <category term="Others" scheme="http://yoursite.com/categories/Others/"/>
    
    
      <category term="闲话" scheme="http://yoursite.com/tags/%E9%97%B2%E8%AF%9D/"/>
    
  </entry>
  
  <entry>
    <title>Hello World, I&#39;m Antrovirens</title>
    <link href="http://yoursite.com/2019/07/14/hello-world/"/>
    <id>http://yoursite.com/2019/07/14/hello-world/</id>
    <published>2019-07-14T10:38:45.000Z</published>
    <updated>2019-07-21T15:49:25.876Z</updated>
    
    <content type="html"><![CDATA[<div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/cloud/%E7%A7%98%E5%B0%812.png" alt="cover"></div><p>Hi~ I am Antrovirens, lucky to see you here.</p><h2 id="welcome-to-atrovirens-cafe-this-is-my-very-first-post"><a class="markdownIt-Anchor" href="#welcome-to-atrovirens-cafe-this-is-my-very-first-post"></a> Welcome to <a href="https://antrovirens.github.io/" target="_blank" rel="noopener">Atrovirens’ Cafe</a>! This is my very first post.</h2><p>在这里我将分享我自己的建站过程</p><h2 id="从hexo自定义到github部署"><a class="markdownIt-Anchor" href="#从hexo自定义到github部署"></a> 从hexo自定义到github部署</h2><p>Hexo 是一个基于 Node.js 的静态博客程序，可以方便的生成静态网页托管在github和Heroku上。</p><h3 id="hexo创建静态页面"><a class="markdownIt-Anchor" href="#hexo创建静态页面"></a> hexo创建静态页面</h3><h4 id="第一步-安装nodejs和git"><a class="markdownIt-Anchor" href="#第一步-安装nodejs和git"></a> <strong>第一步 安装Node.js和Git</strong></h4><p>Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine.从官方页面下载持续支持版本的node.js(10.16.0 LTS)可执行安装程序<br>下载链接：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Download for Windows (x64)</a>.</p><p>Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.<br>下载链接：<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">downloading the latest (2.22.0) 64-bit version of Git for Windows</a>.</p><h4 id="第二步-安装hexo"><a class="markdownIt-Anchor" href="#第二步-安装hexo"></a> <strong>第二步 安装hexo</strong></h4><p>在合适的位置新建一个文件夹，用于存储数据，比如我的就是C\hexo<br>在准备好的文件夹右键，open Git Bash here，或者直接打开Git Bash然后cd 到自己的目录下面<br>直接npm的话，有几个包会被墙无法下载，需要切换到国内源。<br>更新npm下载源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>安装 Hexo :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo</span><br></pre></td></tr></table></figure><p>g 是 global 全局的意思，会自动下载到全局文件夹里面，所以看到的你自己的文件夹里不会有东西。<br>这里会报一些错，就像下面的那些代码那样，大概是版本问题之类的东西，还有几个警告，完全不会影像hexo的运行，不用管就了。如果不放心的话，就把那些过期的包重新npm install -g 一下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C:\hexo&gt;npm install hexo -g</span><br><span class="line">npm WARN deprecated core-js@1.2.7: core-js@&lt;2.6.8 is no longer maintained. Please, upgrade to core-js@3 or at least to actual version of core-js@2.</span><br><span class="line">C:\Users\sheld\AppData\Roaming\npm\hexo -&gt; C:\Users\sheld\AppData\Roaming\npm\node_modules\hexo\bin\hexo</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules\hexo\node_modules\fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform <span class="keyword">for</span> fsevents@1.2.9: wanted &#123;<span class="string">"os"</span>:<span class="string">"darwin"</span>,<span class="string">"arch"</span>:<span class="string">"any"</span>&#125; (current: &#123;<span class="string">"os"</span>:<span class="string">"win32"</span>,<span class="string">"arch"</span>:<span class="string">"x64"</span>&#125;)</span><br></pre></td></tr></table></figure><p>安装依赖包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>在文件夹内初始化：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p>node_modules：是依赖包<br>public：存放的是生成的页面<br>scaffolds：命令生成文章等的模板<br>source：用命令创建的各种文章<br>themes：主题<br>_config.yml：整个博客的配置<br>db.json：source解析所得到的<br>package.json：项目所需模块项目的配置信息</p><h4 id="第三步-配置hexo"><a class="markdownIt-Anchor" href="#第三步-配置hexo"></a> <strong>第三步 配置hexo</strong></h4><p>生成网站:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>启动Hexo server:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>成功后命令行提示如下 :</p><blockquote><p>INFO  Start processing<br>INFO  Hexo is running at <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>. Press Ctrl+C to stop.<br>表示Hexo服务已成功启动 , 在浏览器进入localhost:4000 即可查看页面</p></blockquote><p>在文件_config.yml中可以进行网站设置的修改，在theme相应文件夹下的_config.yml可以进行该主题网站页面布局的修改，网站内容的修改，例如下面片段</p><blockquote><p>title: Atrovirens’ Cáfe<br>subtitle: 来杯下午茶吧<br>description:<br>keywords:<br>author: antrovirens<br>language: 简体中文<br>timezone:</p></blockquote><h4 id="第四步-设置ssh"><a class="markdownIt-Anchor" href="#第四步-设置ssh"></a> <strong>第四步 设置ssh</strong></h4><p>如果还没有进行过git的初始配置，需要输入如下指令配置用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sheld@Antrovirens MINGW64 ~</span><br><span class="line">$ git config --global user.name <span class="string">"GitHub用户名"</span></span><br><span class="line">$ git config --global user.email <span class="string">"GitHub邮箱"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/.ssh</span><br><span class="line">$ ls  <span class="comment">#或者 ll 查看文件夹内有无ssh配置文件</span></span><br></pre></td></tr></table></figure><p>生成ssh密钥文件，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"GitHub邮箱"</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/c/Users/sheld/.ssh/id_rsa):</span><br><span class="line"><span class="comment">#这里是要创建文件夹保存，输入文件夹名，直接回车就是默认位置</span></span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line"><span class="comment">#这里输入配置的post密码  最小位数不少于5位，而且还不能太简单那，否则会失败</span></span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /c/Users/sheld/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /c/Users/sheld/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:**一段乱码** your_github_email@outlook.com</span><br><span class="line">The key<span class="string">'s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 2048]----+</span></span><br><span class="line"><span class="string">|                 |</span></span><br><span class="line"><span class="string">|                 |</span></span><br><span class="line"><span class="string">|                 |</span></span><br><span class="line"><span class="string">|    ?????????    |</span></span><br><span class="line"><span class="string">|    ?????????    |</span></span><br><span class="line"><span class="string">|   这是一张图片   |</span></span><br><span class="line"><span class="string">|  ?????????????? |</span></span><br><span class="line"><span class="string">|  ?????????????? |</span></span><br><span class="line"><span class="string">|  ?????????????? |</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">sheld@Antrovirens MINGW64 ~/.ssh</span></span><br><span class="line"><span class="string">$ cat id_rsa.pub</span></span><br><span class="line"><span class="string">ssh-rsa **一段很长的乱码**  your_github_email@outlook.com</span></span><br><span class="line"><span class="string">#用指令查看你的ssh密钥，然后添加到你的Githu账号里面去</span></span><br><span class="line"><span class="string">#添加成功后，可以输入下面语句，输入post密码之后，弹出类似语句表示创建成功</span></span><br><span class="line"><span class="string">$ ssh -T git@github.com</span></span><br><span class="line"><span class="string">Enter passphrase for key '</span>/c/Users/sheld/.ssh/id_rsa<span class="string">':</span></span><br><span class="line"><span class="string">Hi Antrovirens! You'</span>ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><h4 id="第五步-部署到github"><a class="markdownIt-Anchor" href="#第五步-部署到github"></a> <strong>第五步 部署到Github</strong></h4><p>在你的github下新建一个名字必须为username.github.io的个人仓库作为你的网站环境，我是很久之前做的了，具体步骤我也不去回忆了，不服责任的扔一个网址https://jingyan.baidu.com/article/e8cdb32b0ce12137042bad51.html<br>在username.github.io仓库下通过ssh clone得到ssh链接，在你的config文件下的deploy项目下修改相关信息，可以参考官方文档</p><blockquote><p># Deployment<br>## Docs: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">https://hexo.io/docs/deployment.html</a><br>deploy:<br>type: git<br>repository: <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:Antrovirens/antrovirens.github.io.git<br>branch: master</p></blockquote><p>接下来就可以直接部署了，一般的部署流程如下流程，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d </span><br><span class="line">ERROR Deployer not found: git</span><br><span class="line">$ npm install --save hexo-deployer-git</span><br><span class="line">$ hexo d </span><br><span class="line"><span class="comment">#一段代码流和等待之后。。。</span></span><br><span class="line">INFO  Deploy <span class="keyword">done</span>: git</span><br></pre></td></tr></table></figure><p>完事大吉 欣赏自己的网站8</p><h4 id="extra-因为偷懒又拖后的关于网站页面diy的简单介绍"><a class="markdownIt-Anchor" href="#extra-因为偷懒又拖后的关于网站页面diy的简单介绍"></a> extra 因为偷懒又拖后的关于网站页面DIY的简单介绍</h4><p>咕咕咕 或许明天会更新</p><p>已经做了： 部署rss订阅源   新建文章   更换封面图片  流量统计  文章中插入图片  更多文字样式   gitalk<br>准备做：  About页面的书写 readme.md文件的保留   插入复杂数学公式</p><p><strong>如何插入图片</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![Alt text](图片链接 &quot;optional title&quot;)</span><br><span class="line">![avatar](/home/picture/1.png)</span><br><span class="line">![avatar](http://baidu.com/pic/doge.png)</span><br></pre></td></tr></table></figure><p><strong>如何使图片水平居中</strong><br>基础方法，代码如下</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div align = <span class="string">"center"</span>&gt;</span><br><span class="line">&lt;img src = <span class="string">""</span> alt = <span class="string">""</span> /&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div align= <span class="string">"center"</span>&gt;</span><br><span class="line">&lt;img src=<span class="string">"https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/simple%20learning%20mechane.jpg"</span> alt = <span class="string">"简单的学习器"</span> width=<span class="string">"300"</span> height=<span class="string">"100"</span>/&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>接下来的两个方法我没有试过，相关知识可以去W3chool上自己看<br>利用margin: 0 auto实现图片水平居中,利用margin: 0 auto实现图片居中就是在图片上加上css样式margin: 0 auto 如下：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=<span class="string">"text-align: center; width: 500px; border: green solid 1px;"</span>&gt;</span><br><span class="line">&lt;img alt=<span class="string">""</span> src=<span class="string">"https://www.baidu.com/img/baidu_jgylogo3.gif"</span> style=<span class="string">"margin: 0 auto;"</span> /&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>利用文本的水平居中属性text-align: center,代码如下:</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=<span class="string">"text-align: center; width: 500px; border: green solid 1px;"</span>&gt;</span><br><span class="line">&lt;img alt=<span class="string">""</span> src=<span class="string">"https://www.baidu.com/img/baidu_jgylogo3.gif"</span> style=<span class="string">"display: inline-block;"</span> /&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><strong>如何插入公式</strong><br>转自xinet的博客 <a href="https://www.cnblogs.com/q735613050/p/7253073.html" target="_blank" rel="noopener">https://www.cnblogs.com/q735613050/p/7253073.html</a></p><p>行中公式(放在文中与其它文字混编)可以用如下方法表示：<br><code>$ 数学公式 $</code><br>独立公式可以用如下方法表示：<br><code>$$ 数学公式 $$</code></p><p>^表示上标, _ 表示下标。如果上下标的内容多于一个字符，需要用{}将这些内容括成一个整体。上下标可以嵌套，也可以同时使用。<br>例子：<br><code>$$ x^{y^z}=(1+{\rm e}^x)^{-2xy^w} $$</code></p>x^{y^z}=(1+{\rm e}^x)^{-2xy^w} <p>另外，如果要在左右两边都有上下标，可以用\sideset 命令<br><code>$$ \sideset{^1_2}{^3_4}\bigotimes $$</code></p>\sideset{^1_2}{^3_4}\bigotimes <p>()、[]和|表示符号本身，使用 <code>\{\}</code> 来表示 {}。当要显示大号的括号或分隔符时，要用 \left 和 \right 命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$$\langle表达式\rangle$$ 尖括号</span><br><span class="line">$$\lceil表达式\rceil$$ 向下取整</span><br><span class="line">$$\lfloor表达式\rfloor$$ 向上取整</span><br><span class="line">$$\lbrace表达式\rbrace$$ &#123;&#125;</span><br></pre></td></tr></table></figure><p><code>$$ f(x,y,z) = 3y^2z \left( 3+\frac{7x+5}{1+y^2} \right) $$</code></p><blockquote><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo>)</mo><mo>=</mo><mn>3</mn><msup><mi>y</mi><mn>2</mn></msup><mi>z</mi><mrow><mo fence="true">(</mo><mn>3</mn><mo>+</mo><mfrac><mrow><mn>7</mn><mi>x</mi><mo>+</mo><mn>5</mn></mrow><mrow><mn>1</mn><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup></mrow></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">f(x,y,z) = 3y^2z \left( 3+\frac{7x+5}{1+y^2} \right) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.45em;"></span><span class="strut bottom" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">x</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathrm">3</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="vlist"><span style="top:-0.413em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="minner displaystyle textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord mathrm">3</span><span class="mbin">+</span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.6860000000000002em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord mathrm">1</span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="vlist"><span style="top:-0.289em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathrm">7</span><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathrm">5</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p></blockquote><p>通常使用 \frac {分子} {分母}命令产生一个分数\frac {分子} {分母}，分数可嵌套。<br>便捷情况可直接输入 \frac ab来快速生成一个\frac ab。<br>如果分式很复杂，亦可使用 分子 \over 分母 命令，此时分数仅有一层。</p><p>使用 \sqrt [根指数，省略时为2] {被开方数}命令输入开方。</p><p>数学公式中常见的省略号有两种，\ldots 表示与文本底线对齐的省略号，\cdots 表示与文本中线对齐的省略号。</p><p>使用 \vec{矢量}来自动产生一个矢量。也可以使用 \overrightarrow等命令自定义字母上方的符号。<br><code>$$\overleftarrow{xy} \quad and \quad \overleftrightarrow{xy} \quad and \quad \overrightarrow{xy}$$</code></p>\overleftarrow{xy} \quad and \quad \overleftrightarrow{xy} \quad and \quad \overrightarrow{xy}<p>使用 \int_积分下限^积分上限 {被积表达式} 来输入一个积分。</p><p>使用\lim_{变量 \to 表达式} 表达式 来输入一个极限。如有需求，可以更改 \to 符号至任意符号。</p><p>使用 \sum_{下标表达式}^{上标表达式} {累加表达式}来输入一个累加。<br>与之类似，使用 \prod \bigcup \bigcap来分别输入累乘、并集和交集。<br>此类符号在行内显示时上下标表达式将会移至右上角和右下角。<br><code>$$\sum_{i=1}^n \frac{1}{i^2} \quad and \quad \prod_{i=1}^n \frac{1}{i^2} \quad and \quad \bigcup_{i=1}^{2} R$$</code></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mfrac><mrow><mn>1</mn></mrow><mrow><msup><mi>i</mi><mn>2</mn></msup></mrow></mfrac><mspace width="1em"></mspace><mi>a</mi><mi>n</mi><mi>d</mi><mspace width="1em"></mspace><msubsup><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mfrac><mrow><mn>1</mn></mrow><mrow><msup><mi>i</mi><mn>2</mn></msup></mrow></mfrac><mspace width="1em"></mspace><mi>a</mi><mi>n</mi><mi>d</mi><mspace width="1em"></mspace><msubsup><mo>⋃</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mn>2</mn></mrow></msubsup><mi>R</mi></mrow><annotation encoding="application/x-tex">\sum_{i=1}^n \frac{1}{i^2} \quad and \quad \prod_{i=1}^n \frac{1}{i^2} \quad and \quad \bigcup_{i=1}^{2} R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.8011130000000004em;"></span><span class="strut bottom" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="base displaystyle textstyle uncramped"><span class="mop op-limits"><span class="vlist"><span style="top:1.1776689999999999em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.000005000000000143778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span style="top:-1.2500050000000003em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord"><span class="mord mathit">i</span><span class="vlist"><span style="top:-0.289em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mord mspace quad"></span><span class="mord mathit">a</span><span class="mord mathit">n</span><span class="mord mathit">d</span><span class="mord mspace quad"></span><span class="mop op-limits"><span class="vlist"><span style="top:1.1776689999999999em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.000005000000000143778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span><span class="op-symbol large-op mop">∏</span></span></span><span style="top:-1.2500050000000003em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord"><span class="mord mathit">i</span><span class="vlist"><span style="top:-0.289em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mord mspace quad"></span><span class="mord mathit">a</span><span class="mord mathit">n</span><span class="mord mathit">d</span><span class="mord mspace quad"></span><span class="mop op-limits"><span class="vlist"><span style="top:1.1776689999999999em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.000005000000000143778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span><span class="op-symbol large-op mop">⋃</span></span></span><span style="top:-1.2500050000000003em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.00773em;">R</span></span></span></span></span></p><p>输入 \小写希腊字母英文全称和\首字母大写希腊字母英文全称来分别输入小写和大写希腊字母。<br>对于大写希腊字母与现有字母相同的，直接输入大写字母即可。</p><p>使用 \left和 \right来创建自动匹配高度的 (圆括号)，[方括号] 和 {花括号} 。<br>在每个公式末尾前使用\tag{行标}来实现行标。</p><p>若要对公式的某一部分字符进行字体转换，可以用 {\字体 {需转换的部分字符}} 命令，其中 \字体 部分可以参照下表选择合适的字体。一般情况下，公式默认为意大利体.</p><blockquote><p>\rm罗马体<br>\boldsymbol黑体<br>\mit数学斜体<br>\bf粗体</p></blockquote><p><strong>Gitalk配置</strong></p><p>github - setting - developing settings - OAuth Apps -Register - 主页和返回也都填写为自己的homepage;<br>结束后得到一个ID 和 密钥，填写到主题文件夹之下的config文件里面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">gitalk:</span><br><span class="line">    # 是否自动展开评论框</span><br><span class="line">    autoExpand: false</span><br><span class="line">    # 应用编号</span><br><span class="line">    clientID: &apos;**********&apos;</span><br><span class="line">    # 应用秘钥</span><br><span class="line">    clientSecret: &apos;***************&apos;</span><br><span class="line">    # issue仓库名</span><br><span class="line">    repo: &apos;antrovirens.github.io&apos;</span><br><span class="line">    # Github名</span><br><span class="line">    owner: &apos;antrovirens&apos;</span><br><span class="line">    # Github名</span><br><span class="line">    admin: [&apos;antrovirens&apos;]</span><br><span class="line">    # Ensure uniqueness and length less than 50</span><br><span class="line">    id: location.pathname</span><br><span class="line">    # Facebook-like distraction free mode</span><br><span class="line">    distractionFreeMode: false</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/cloud/%E7%A7%98%E5%B0%812.png&quot; alt=&quot;cover&quot;&gt;
&lt;/d
      
    
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="Web" scheme="http://yoursite.com/tags/Web/"/>
    
      <category term="博客搭建" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
</feed>
