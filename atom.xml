<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Atrovirens&#39; Café</title>
  
  <subtitle>来杯下午茶吧</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-07-21T14:52:35.820Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>antrovirens</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>神经网络从经典到卷积</title>
    <link href="http://yoursite.com/2019/07/21/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BB%8E%E7%BB%8F%E5%85%B8%E5%88%B0%E5%8D%B7%E7%A7%AF/"/>
    <id>http://yoursite.com/2019/07/21/神经网络从经典到卷积/</id>
    <published>2019-07-21T06:48:14.000Z</published>
    <updated>2019-07-21T14:52:35.820Z</updated>
    
    <content type="html"><![CDATA[<div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/cover.jpg" alt="cover"></div><p>神经网络是一种模拟人脑神经结构的计算机程序结构，以期能够实现人工智能的机器学习技术。本文将介绍神经网络背后的概念，并介绍如何通过编程实现神经网络。</p><h2 id="神经网络基础"><a class="markdownIt-Anchor" href="#神经网络基础"></a> 神经网络基础</h2><p>机器可以迅速做出大量的算术运算，但是无法处理图像中包含的大量信息。我们怀疑图像识别需要特别的人类智能， 而这是机器所缺乏的，人工智能所讨论的问题正是如此。</p><h3 id="简单的学习器"><a class="markdownIt-Anchor" href="#简单的学习器"></a> 简单的学习器</h3><p>一台基本的机器的工作流程，如下图所示，接受了一个问题并作出相应的思考，得到一个输出结果。</p><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/simple%20learning%20mechane.jpg" alt="简单的学习器" width="300" height="100"></div><p>所有有用的计算机系统都应该有一个输入和输出，并在输入和输出之间进行某种类型的计算。我们不能精确知道一些事务如何运行，但我们可以通过模型来估计其运作方式。改进这些模型的方法是通过输出值和真实值之间的比较得到偏移值，进一步调整参数。</p><p>以一个简单的分类器为例子，有二维坐标内有两个点系，聚集在两片区域，先要用一条直线将这两类特征分开，即为通过判断在直线的那一端来对这两类进行分类。</p><p>我们设计一条经过原点的直线 y = A * x 作为我们分类的依据。这条直线应该基于具体的坐标数值特征将两组点分割开来。</p><p>为简化工作，将实例简化为以下的表格。</p><table><thead><tr><th style="text-align:center">实例</th><th style="text-align:center">x坐标</th><th style="text-align:center">y坐标</th><th style="text-align:center">类别</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">3.0</td><td style="text-align:center">1.0</td><td style="text-align:center">A</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">1.0</td><td style="text-align:center">3.0</td><td style="text-align:center">B</td></tr></tbody></table><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/Figure_1.png" alt="线性分类器"></div><p>参数A控制着直线的斜率，我们给A赋予一个初值0.25，取x = 3.0, y = 0.75，我们所期望的直线应该经过A类别的上方，比如是1.1的目标值，我们可以利用这个误差来调整A值：</p><blockquote><p>误差值 = 期望目标值 - 实际输出值<br>E = 1.1 - 0.75 = 0.35</p></blockquote><p>分类器的线性函数应该修改为 t = (A + dA) * x</p><blockquote><p>E = t - y = (A + dA) * x - A * x = dA * x<br>dA = E / x = 0.35 / 3 = 0.1167</p></blockquote><p>这样A的新值化为A + dA =0.3667。 接下来可以接着输入B类的样本，使得A值进一步趋向于使直线略微低于B类点群的下方。但是这样的分类方法最终改进的直线不会顾及开始的训练值，而是仅仅考虑了最近的一组数据，这不是我们想要的结果。</p><p>机器学习中，我们应该进行适度改进（moderate），不应该改进过于激烈，当训练数据本身不能确定为完全正确，包含现实误差和噪声的时候，可以抑制这些影响因素。<br>在改进的公式中引入一个调节系数L，也是所谓的学习率（learning rate）</p><blockquote><p>dA = L * (E / x)</p></blockquote><p>选取L = 0.5 作为一个合理的系数，意味着我们只会更新值的一半。</p><p>一个简单的py实现样例代码如下。需要手工用文本写一个输入数据的文件classification cal sample.txt</p><pre class="highlight"><code class="py">import numpy as npimport matplotlib.pyplot as pltdatas = []  #初始化file_object = open('classification cal sample.txt','r')try:    for line in file_object:        # do_somthing_with(line) #line带&quot;\n&quot;        line = line.replace(',',' ').replace('\n','')  #去除无用字符        num = list(map(float,line.split()))  # 把空白行分离开，映射到表结构 参见python自带函数map()         datas.append(num) #后续拓展表        #print(datas)finally:     file_object.close() #文件流关闭plt.figure(num = 2019, figsize = (5, 5)) #初始化图形，指定figure的编号并指定figure的大小for data in datas:    a = data[0] # xi    b = data[1] # yi    k = b / a    x = np.linspace(0, a, int(50 * a))    y = k * x    plt.plot(x,y,color = 'black', linewidth = 1.0, linestyle = '--') #定义线性# y = A * x    E = dA * x     dA= L * (E / x)A = 0.1L = 0.5 #预设的初始值# 进行简单的拟合  一个可循环的过程for data in datas:    E = data[1] - A * data[0] + data[1] / 10    dA = L * (E / data[0])    A = A + dA    x = np.linspace(0, 5, 250) #绘制图形y = A * xplt.plot(x,y,color = 'green', linewidth = 1.0)plt.show()</code></pre><p>有时候一个分类器不足以解决问题，如果数据本身不是单一线性过程支配，那么一个简单的线性分类器不能对数据进行划分。例如逻辑上的异或问题（如下方图）。这样的问题需要多个线性分类器来共同解决</p><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/Figure_2.png" alt="多个线性分类器解决异或问题"></div><h3 id="神经元"><a class="markdownIt-Anchor" href="#神经元"></a> 神经元</h3><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/neuron.jpg" alt="神经元"></div><p>大脑神经的基本单元是神经元，虽然神经元有着多种形式，神经元都会将电信号从一段传递到另一端，沿着突触，将电信号从树突传递到树突。神经元主要结构可以分为树突和终端。一个神经元接受了电信号，当接受信号超过一定阈值（threshold），神经元被激发后链接电路，产生一个输出信号。</p><p>思考我们如何建模人工神经。生物神经元可以接受很多输出，我们需要将他们加权相加得到总输入，通过内在的阈值函数计算得到输出结果，可以提供信号给更多的神经元。将这种结构复制到人造模型的一种方法是构造多层神经元，如图所示</p><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/neural%20networks1.jpg" alt="neural networks"></div><p>每一层的节点都与所有下一层的节点通过一定的权重直接相连，通过调整节点之间的连接强度或阈值函数的形状来进行节点之间的强度调节</p><p>了解了处理结构之后，激活函数引入给我们的模型带入了非线性元素，可以处理更为复杂的问题，实际中较为常用的激活函数主要有三种，Sigmoid, tanh, 和ReLU</p><h4 id="sigmoid"><a class="markdownIt-Anchor" href="#sigmoid"></a> Sigmoid</h4><p>（这里是因为我的Katex公式渲染还有一点问题，还得待调试，下面把python的计算代码贴上来）</p><blockquote><p>y = 1 / (1 + np.exp(-x))</p></blockquote><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/Sigmoid%20Function.png" alt="Sigmoid Fuction"></div><p>Sigmoid函数经过激活之后的输出区间为（0，1），输入的数据越大，输出越接近1，否则越接近0。sigmoid函数与生物神经网络的工作机制很类似，在一开始作为激活函数时广泛收到大众认可，但他的缺点也非常明显，他的最大问题在于会导致模型的梯度消失，函数的导数取值区间为0~0.25，在后向传播时，每逆向经过一个节点就要乘以一个sigmoid的导数值，当模型层次达到一定程度时，会导致梯度值越来越小，直到消失。</p><h4 id="tanh"><a class="markdownIt-Anchor" href="#tanh"></a> tanh</h4><blockquote><p>y1 = (np.exp(x) - np.exp(-x)) / (np.exp(x) + np.exp(-x))</p></blockquote><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/Tanh%20Function.png" alt="tanh"></div><p>tanh函数的输出结果是中心对称的，解决了激活函数在模型优化中收敛速度变慢的问题，然鹅求导的取值区域为0~1，仍然不够大</p><h4 id="relu"><a class="markdownIt-Anchor" href="#relu"></a> ReLU</h4><blockquote><p>f(x)= max(0,x)</p></blockquote><div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/ReLU%20Function.png" alt="ReLU"></div><p>ReLU修正线性单元 是现在在深度学习神经网络模型中使用率最高的激活函数，使用它在实际计算中非常高效，收敛速度非常快，但是函数特性可能会导致有一些神经元永远不会被激活，并且这些神经元参数不能被更新。这一般是由于模型参数在初始化的时候采用了全正或者全负的值，或者在后向传播中设置的学习率过高导致的。解决方法有对模型参数使用更高级的初始化方法，比如Xavier，以及合理的后向传播速率，推荐使用自适应的算法比如Adam</p><h3 id="追踪信号"><a class="markdownIt-Anchor" href="#追踪信号"></a> 追踪信号</h3><p>可以用矩阵的陈发表示所有的运算</p><blockquote><p><em>X = W * I</em></p></blockquote><p>W为权重矩阵，以第二层为视界，每一行为第一层的各个节点连接到第二层的某节点的权重序列;I矩阵为输入矩阵，X为组合调节之后的信号</p><blockquote><p><em>O = function(X)</em></p></blockquote><p>O表示着经过激活函数处理后的该层的所有输出</p><p>以一个结构为3x3的，有input、hidden、output层组成的神经网络作为算例，一次结果的输出过程如下：</p><blockquote><p>I : input_data<br><em>X<sub>hidden</sub> = W<sub>input_hidden</sub> · I</em><br><em>O<sub>hidden</sub> = sigmoid(X<sub>hidden</sub>)</em><br><em>X<sub>output</sub> = W<sub>hidden_output</sub> · O<sub>hidden</sub></em><br><em>O<sub>output</sub> = X<sub>output</sub></em></p></blockquote><h3 id="后向传播"><a class="markdownIt-Anchor" href="#后向传播"></a> 后向传播</h3><h3 id="更新权重"><a class="markdownIt-Anchor" href="#更新权重"></a> 更新权重</h3><h2 id="python神经网络编程"><a class="markdownIt-Anchor" href="#python神经网络编程"></a> python神经网络编程</h2><h2 id="深度学习框架下的神经网络编程"><a class="markdownIt-Anchor" href="#深度学习框架下的神经网络编程"></a> 深度学习框架下的神经网络编程</h2><h3 id="pytorch"><a class="markdownIt-Anchor" href="#pytorch"></a> pytorch</h3><h4 id="pytorch环境配置"><a class="markdownIt-Anchor" href="#pytorch环境配置"></a> Pytorch环境配置</h4><h5 id="env_torch配置"><a class="markdownIt-Anchor" href="#env_torch配置"></a> env_torch配置</h5><p>如果要安装可以在GPU上运行的版本，需要电脑配有NVDIA显卡，并且提前安装CUDA比较先进的版本<br>在anaconda的监视器界面中，新建一个包含适合pytorch工程的新环境，命名为env_tf，直接选择复制了tensorflow的环境然后把tf卸载掉<br>由于conda指令下载缓慢，选择pip下载，在环境prompt中分别输入</p><pre class="highlight"><code class="bash">pip install https://download.pytorch.org/whl/cu100/torch-1.1.0-cp37-cp37m-win_amd64.whlpip install https://download.pytorch.org/whl/cu100/torchvision-0.3.0-cp37-cp37m-win_amd64.whl</code></pre><p>由于conda下载速度缓慢，建议使用加速器</p><h5 id="jupyter-notebook"><a class="markdownIt-Anchor" href="#jupyter-notebook"></a> jupyter notebook</h5><p>该IDE环境使用较多，可在env_torch内通过下方指令安装，建议连加速器</p><pre class="highlight"><code class="bash">conda install jupyter</code></pre><h3 id="tensorflow"><a class="markdownIt-Anchor" href="#tensorflow"></a> tensorflow</h3><h2 id="卷积神经网络"><a class="markdownIt-Anchor" href="#卷积神经网络"></a> 卷积神经网络</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/cover.jpg&quot; alt=&quot;cover&quot;&gt;
&lt;/div&gt;
&lt;p&gt;神
      
    
    </summary>
    
      <category term="深度学习" scheme="http://yoursite.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="计算机视觉" scheme="http://yoursite.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    
      <category term="神经网络" scheme="http://yoursite.com/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
      <category term="卷积神经网络" scheme="http://yoursite.com/tags/%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>About Me</title>
    <link href="http://yoursite.com/2019/07/14/About-Me/"/>
    <id>http://yoursite.com/2019/07/14/About-Me/</id>
    <published>2019-07-14T15:10:28.000Z</published>
    <updated>2019-07-15T14:10:40.166Z</updated>
    
    <content type="html"><![CDATA[<h2 id="i-am-just-an-ordinary-one"><a class="markdownIt-Anchor" href="#i-am-just-an-ordinary-one"></a> I am just an ordinary one</h2><p><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/cover2.jpg" alt="tecent cos1" title="爱丽丝"></p><p><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/cloud/%E7%88%B1%E4%B8%BD%E4%B8%9D2.jpg" alt="tecent cos2" title="爱丽丝2"></p><p><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/cloud/%E9%AD%94%E7%90%86%E6%B2%99.jpg" alt="tecent cos3" title="魔理沙"></p><div style="align: center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/cloud/%E7%88%B1%E4%B8%BD%E4%B8%9D2.jpg"></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;i-am-just-an-ordinary-one&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#i-am-just-an-ordinary-one&quot;&gt;&lt;/a&gt; I am just an ordinary one&lt;/h2&gt;
&lt;p&gt;&lt;im
      
    
    </summary>
    
      <category term="Others" scheme="http://yoursite.com/categories/Others/"/>
    
    
      <category term="闲话" scheme="http://yoursite.com/tags/%E9%97%B2%E8%AF%9D/"/>
    
  </entry>
  
  <entry>
    <title>Hello World, I&#39;m Antrovirens</title>
    <link href="http://yoursite.com/2019/07/14/hello-world/"/>
    <id>http://yoursite.com/2019/07/14/hello-world/</id>
    <published>2019-07-14T10:38:45.000Z</published>
    <updated>2019-07-21T15:33:10.386Z</updated>
    
    <content type="html"><![CDATA[<div align="center"><img src="https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/cloud/%E7%A7%98%E5%B0%812.png" alt="cover"></div><p>Hi~ I am Antrovirens, lucky to see you here.</p><h2 id="welcome-to-atrovirens-cafe-this-is-my-very-first-post"><a class="markdownIt-Anchor" href="#welcome-to-atrovirens-cafe-this-is-my-very-first-post"></a> Welcome to <a href="https://antrovirens.github.io/" target="_blank" rel="noopener">Atrovirens’ Cafe</a>! This is my very first post.</h2><p>在这里我将分享我自己的建站过程</p><h2 id="从hexo自定义到github部署"><a class="markdownIt-Anchor" href="#从hexo自定义到github部署"></a> 从hexo自定义到github部署</h2><p>Hexo 是一个基于 Node.js 的静态博客程序，可以方便的生成静态网页托管在github和Heroku上。</p><h3 id="hexo创建静态页面"><a class="markdownIt-Anchor" href="#hexo创建静态页面"></a> hexo创建静态页面</h3><h4 id="第一步-安装nodejs和git"><a class="markdownIt-Anchor" href="#第一步-安装nodejs和git"></a> <strong>第一步 安装Node.js和Git</strong></h4><p>Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine.从官方页面下载持续支持版本的node.js(10.16.0 LTS)可执行安装程序<br>下载链接：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Download for Windows (x64)</a>.</p><p>Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.<br>下载链接：<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">downloading the latest (2.22.0) 64-bit version of Git for Windows</a>.</p><h4 id="第二步-安装hexo"><a class="markdownIt-Anchor" href="#第二步-安装hexo"></a> <strong>第二步 安装hexo</strong></h4><p>在合适的位置新建一个文件夹，用于存储数据，比如我的就是C\hexo<br>在准备好的文件夹右键，open Git Bash here，或者直接打开Git Bash然后cd 到自己的目录下面<br>直接npm的话，有几个包会被墙无法下载，需要切换到国内源。<br>更新npm下载源：</p><pre class="highlight"><code class="bash">$ npm config set registry https://registry.npm.taobao.org</code></pre><p>安装 Hexo :</p><pre class="highlight"><code class="bash">$ npm install -g hexo  </code></pre><p>g 是 global 全局的意思，会自动下载到全局文件夹里面，所以看到的你自己的文件夹里不会有东西。<br>这里会报一些错，就像下面的那些代码那样，大概是版本问题之类的东西，还有几个警告，完全不会影像hexo的运行，不用管就了。如果不放心的话，就把那些过期的包重新npm install -g 一下。</p><pre class="highlight"><code class="bash">C:\hexo&gt;npm install hexo -gnpm WARN deprecated core-js@1.2.7: core-js@&lt;2.6.8 is no longer maintained. Please, upgrade to core-js@3 or at least to actual version of core-js@2.C:\Users\sheld\AppData\Roaming\npm\hexo -&gt; C:\Users\sheld\AppData\Roaming\npm\node_modules\hexo\bin\hexonpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules\hexo\node_modules\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.9: wanted {&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;} (current: {&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;})</code></pre><p>安装依赖包：</p><pre class="highlight"><code class="bash">$ npm install</code></pre><p>在文件夹内初始化：</p><pre class="highlight"><code class="bash">$ hexo init</code></pre><p>node_modules：是依赖包<br>public：存放的是生成的页面<br>scaffolds：命令生成文章等的模板<br>source：用命令创建的各种文章<br>themes：主题<br>_config.yml：整个博客的配置<br>db.json：source解析所得到的<br>package.json：项目所需模块项目的配置信息</p><h4 id="第三步-配置hexo"><a class="markdownIt-Anchor" href="#第三步-配置hexo"></a> <strong>第三步 配置hexo</strong></h4><p>生成网站:</p><pre class="highlight"><code class="bash">$ hexo generate</code></pre><p>启动Hexo server:</p><pre class="highlight"><code class="bash">$ hexo server</code></pre><p>成功后命令行提示如下 :</p><blockquote><p>INFO  Start processing<br>INFO  Hexo is running at <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>. Press Ctrl+C to stop.<br>表示Hexo服务已成功启动 , 在浏览器进入localhost:4000 即可查看页面</p></blockquote><p>在文件_config.yml中可以进行网站设置的修改，在theme相应文件夹下的_config.yml可以进行该主题网站页面布局的修改，网站内容的修改，例如下面片段</p><blockquote><p>title: Atrovirens’ Cáfe<br>subtitle: 来杯下午茶吧<br>description:<br>keywords:<br>author: antrovirens<br>language: 简体中文<br>timezone:</p></blockquote><h4 id="第四步-设置ssh"><a class="markdownIt-Anchor" href="#第四步-设置ssh"></a> <strong>第四步 设置ssh</strong></h4><p>如果还没有进行过git的初始配置，需要输入如下指令配置用户</p><pre class="highlight"><code class="bash">sheld@Antrovirens MINGW64 ~$ git config --global user.name &quot;GitHub用户名&quot;$ git config --global user.email &quot;GitHub邮箱&quot;</code></pre><pre class="highlight"><code class="bash">$ cd ~/.ssh$ ls  #或者 ll 查看文件夹内有无ssh配置文件</code></pre><p>生成ssh密钥文件，</p><pre class="highlight"><code class="bash">$ ssh-keygen -t rsa -C &quot;GitHub邮箱&quot;Generating public/private rsa key pair.Enter file in which to save the key (/c/Users/sheld/.ssh/id_rsa):#这里是要创建文件夹保存，输入文件夹名，直接回车就是默认位置Enter passphrase (empty for no passphrase):#这里输入配置的post密码  最小位数不少于5位，而且还不能太简单那，否则会失败Enter same passphrase again:Your identification has been saved in /c/Users/sheld/.ssh/id_rsa.Your public key has been saved in /c/Users/sheld/.ssh/id_rsa.pub.The key fingerprint is:SHA256:**一段乱码** your_github_email@outlook.comThe key's randomart image is:+---[RSA 2048]----+|                 ||                 ||                 ||    ?????????    ||    ?????????    ||   这是一张图片   ||  ?????????????? ||  ?????????????? ||  ?????????????? |+----[SHA256]-----+sheld@Antrovirens MINGW64 ~/.ssh$ cat id_rsa.pubssh-rsa **一段很长的乱码**  your_github_email@outlook.com#用指令查看你的ssh密钥，然后添加到你的Githu账号里面去#添加成功后，可以输入下面语句，输入post密码之后，弹出类似语句表示创建成功$ ssh -T git@github.comEnter passphrase for key '/c/Users/sheld/.ssh/id_rsa':Hi Antrovirens! You've successfully authenticated, but GitHub does not provide shell access.</code></pre><h4 id="第五步-部署到github"><a class="markdownIt-Anchor" href="#第五步-部署到github"></a> <strong>第五步 部署到Github</strong></h4><p>在你的github下新建一个名字必须为username.github.io的个人仓库作为你的网站环境，我是很久之前做的了，具体步骤我也不去回忆了，不服责任的扔一个网址https://jingyan.baidu.com/article/e8cdb32b0ce12137042bad51.html<br>在username.github.io仓库下通过ssh clone得到ssh链接，在你的config文件下的deploy项目下修改相关信息，可以参考官方文档</p><blockquote><p># Deployment<br>## Docs: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">https://hexo.io/docs/deployment.html</a><br>deploy:<br>type: git<br>repository: <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:Antrovirens/antrovirens.github.io.git<br>branch: master</p></blockquote><p>接下来就可以直接部署了，一般的部署流程如下流程，</p><pre class="highlight"><code class="bash">$ hexo clean$ hexo g$ hexo d ERROR Deployer not found: git$ npm install --save hexo-deployer-git$ hexo d #一段代码流和等待之后。。。INFO  Deploy done: git</code></pre><p>完事大吉 欣赏自己的网站8</p><h4 id="extra-因为偷懒又拖后的关于网站页面diy的简单介绍"><a class="markdownIt-Anchor" href="#extra-因为偷懒又拖后的关于网站页面diy的简单介绍"></a> extra 因为偷懒又拖后的关于网站页面DIY的简单介绍</h4><p>咕咕咕 或许明天会更新</p><p>已经做了： 部署rss订阅源   新建文章   更换封面图片  流量统计  文章中插入图片  更多文字样式   gitalk<br>准备做：  About页面的书写 readme.md文件的保留   插入复杂数学公式</p><p><strong>如何插入图片</strong></p><pre class="highlight"><code class>![Alt text](图片链接 &quot;optional title&quot;)![avatar](/home/picture/1.png)![avatar](http://baidu.com/pic/doge.png)</code></pre><p><strong>如何使图片水平居中</strong><br>基础方法，代码如下</p><pre class="highlight"><code class="cs">&lt;div align = &quot;center&quot;&gt;&lt;img src = &quot;&quot; alt = &quot;&quot; /&gt;&lt;/div&gt;&lt;div align= &quot;center&quot;&gt;&lt;img src=&quot;https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/post/190721/simple%20learning%20mechane.jpg&quot; alt = &quot;简单的学习器&quot; width=&quot;300&quot; height=&quot;100&quot;/&gt;&lt;/div&gt;</code></pre><p>接下来的两个方法我没有试过，相关知识可以去W3chool上自己看<br>利用margin: 0 auto实现图片水平居中,利用margin: 0 auto实现图片居中就是在图片上加上css样式margin: 0 auto 如下：</p><pre class="highlight"><code class="cs">&lt;div style=&quot;text-align: center; width: 500px; border: green solid 1px;&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://www.baidu.com/img/baidu_jgylogo3.gif&quot; style=&quot;margin: 0 auto;&quot; /&gt;&lt;/div&gt;</code></pre><p>利用文本的水平居中属性text-align: center,代码如下:</p><pre class="highlight"><code class="cs">&lt;div style=&quot;text-align: center; width: 500px; border: green solid 1px;&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://www.baidu.com/img/baidu_jgylogo3.gif&quot; style=&quot;display: inline-block;&quot; /&gt;&lt;/div&gt;</code></pre><p><strong>如何插入公式</strong><br>转自xinet的博客 <a href="https://www.cnblogs.com/q735613050/p/7253073.html" target="_blank" rel="noopener">https://www.cnblogs.com/q735613050/p/7253073.html</a></p><p>行中公式(放在文中与其它文字混编)可以用如下方法表示：<br><code>$ 数学公式 $</code><br>独立公式可以用如下方法表示：<br><code>$$ 数学公式 $$</code></p><p>^表示上标, _ 表示下标。如果上下标的内容多于一个字符，需要用{}将这些内容括成一个整体。上下标可以嵌套，也可以同时使用。<br>例子：<br><code>$$ x^{y^z}=(1+{\rm e}^x)^{-2xy^w} $$</code></p>x^{y^z}=(1+{\rm e}^x)^{-2xy^w} <p>另外，如果要在左右两边都有上下标，可以用\sideset 命令<br><code>$$ \sideset{^1_2}{^3_4}\bigotimes $$</code></p>\sideset{^1_2}{^3_4}\bigotimes <p>()、[]和|表示符号本身，使用 <code>\{\}</code> 来表示 {}。当要显示大号的括号或分隔符时，要用 \left 和 \right 命令。</p><pre class="highlight"><code class>$$\langle表达式\rangle$$ 尖括号$$\lceil表达式\rceil$$ 向下取整$$\lfloor表达式\rfloor$$ 向上取整$$\lbrace表达式\rbrace$$ {}</code></pre><p><code>$$ f(x,y,z) = 3y^2z \left( 3+\frac{7x+5}{1+y^2} \right) $$</code></p><blockquote><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo>)</mo><mo>=</mo><mn>3</mn><msup><mi>y</mi><mn>2</mn></msup><mi>z</mi><mrow><mo fence="true">(</mo><mn>3</mn><mo>+</mo><mfrac><mrow><mn>7</mn><mi>x</mi><mo>+</mo><mn>5</mn></mrow><mrow><mn>1</mn><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup></mrow></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">f(x,y,z) = 3y^2z \left( 3+\frac{7x+5}{1+y^2} \right) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.45em;"></span><span class="strut bottom" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">x</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathrm">3</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="vlist"><span style="top:-0.413em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="minner displaystyle textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord mathrm">3</span><span class="mbin">+</span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.6860000000000002em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord mathrm">1</span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="vlist"><span style="top:-0.289em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathrm">7</span><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathrm">5</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p></blockquote><p>通常使用 \frac {分子} {分母}命令产生一个分数\frac {分子} {分母}，分数可嵌套。<br>便捷情况可直接输入 \frac ab来快速生成一个\frac ab。<br>如果分式很复杂，亦可使用 分子 \over 分母 命令，此时分数仅有一层。</p><p>使用 \sqrt [根指数，省略时为2] {被开方数}命令输入开方。</p><p>数学公式中常见的省略号有两种，\ldots 表示与文本底线对齐的省略号，\cdots 表示与文本中线对齐的省略号。</p><p>使用 \vec{矢量}来自动产生一个矢量。也可以使用 \overrightarrow等命令自定义字母上方的符号。<br><code>$$\overleftarrow{xy} \quad and \quad \overleftrightarrow{xy} \quad and \quad \overrightarrow{xy}$$</code></p>\overleftarrow{xy} \quad and \quad \overleftrightarrow{xy} \quad and \quad \overrightarrow{xy}<p>使用 \int_积分下限^积分上限 {被积表达式} 来输入一个积分。</p><p>使用\lim_{变量 \to 表达式} 表达式 来输入一个极限。如有需求，可以更改 \to 符号至任意符号。</p><p>使用 \sum_{下标表达式}^{上标表达式} {累加表达式}来输入一个累加。<br>与之类似，使用 \prod \bigcup \bigcap来分别输入累乘、并集和交集。<br>此类符号在行内显示时上下标表达式将会移至右上角和右下角。<br><code>$$\sum_{i=1}^n \frac{1}{i^2} \quad and \quad \prod_{i=1}^n \frac{1}{i^2} \quad and \quad \bigcup_{i=1}^{2} R$$</code></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mfrac><mrow><mn>1</mn></mrow><mrow><msup><mi>i</mi><mn>2</mn></msup></mrow></mfrac><mspace width="1em"></mspace><mi>a</mi><mi>n</mi><mi>d</mi><mspace width="1em"></mspace><msubsup><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mfrac><mrow><mn>1</mn></mrow><mrow><msup><mi>i</mi><mn>2</mn></msup></mrow></mfrac><mspace width="1em"></mspace><mi>a</mi><mi>n</mi><mi>d</mi><mspace width="1em"></mspace><msubsup><mo>⋃</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mn>2</mn></mrow></msubsup><mi>R</mi></mrow><annotation encoding="application/x-tex">\sum_{i=1}^n \frac{1}{i^2} \quad and \quad \prod_{i=1}^n \frac{1}{i^2} \quad and \quad \bigcup_{i=1}^{2} R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.8011130000000004em;"></span><span class="strut bottom" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="base displaystyle textstyle uncramped"><span class="mop op-limits"><span class="vlist"><span style="top:1.1776689999999999em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.000005000000000143778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span style="top:-1.2500050000000003em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord"><span class="mord mathit">i</span><span class="vlist"><span style="top:-0.289em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mord mspace quad"></span><span class="mord mathit">a</span><span class="mord mathit">n</span><span class="mord mathit">d</span><span class="mord mspace quad"></span><span class="mop op-limits"><span class="vlist"><span style="top:1.1776689999999999em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.000005000000000143778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span><span class="op-symbol large-op mop">∏</span></span></span><span style="top:-1.2500050000000003em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord"><span class="mord mathit">i</span><span class="vlist"><span style="top:-0.289em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mord mspace quad"></span><span class="mord mathit">a</span><span class="mord mathit">n</span><span class="mord mathit">d</span><span class="mord mspace quad"></span><span class="mop op-limits"><span class="vlist"><span style="top:1.1776689999999999em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.000005000000000143778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span><span class="op-symbol large-op mop">⋃</span></span></span><span style="top:-1.2500050000000003em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.00773em;">R</span></span></span></span></span></p><p>输入 \小写希腊字母英文全称和\首字母大写希腊字母英文全称来分别输入小写和大写希腊字母。<br>对于大写希腊字母与现有字母相同的，直接输入大写字母即可。</p><p>使用 \left和 \right来创建自动匹配高度的 (圆括号)，[方括号] 和 {花括号} 。<br>在每个公式末尾前使用\tag{行标}来实现行标。</p><p>若要对公式的某一部分字符进行字体转换，可以用 {\字体 {需转换的部分字符}} 命令，其中 \字体 部分可以参照下表选择合适的字体。一般情况下，公式默认为意大利体.</p><blockquote><p>\rm罗马体<br>\boldsymbol黑体<br>\mit数学斜体<br>\bf粗体</p></blockquote><p>Gitalk配置</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;https://antrovirens-1-1258258000.cos.ap-shanghai.myqcloud.com/cloud/%E7%A7%98%E5%B0%812.png&quot; alt=&quot;cover&quot;&gt;
&lt;/d
      
    
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="Web" scheme="http://yoursite.com/tags/Web/"/>
    
      <category term="博客搭建" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
</feed>
